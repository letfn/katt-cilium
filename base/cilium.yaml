apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: cilium
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: cilium
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: cilium
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: cilium
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - watch
  - update
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: cilium
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: cilium
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: cilium
---
apiVersion: v1
data:
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: ""
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-session-affinity: "true"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  sidecar-istio-proxy-image: cilium/istio_proxy
  tunnel: vxlan
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
---
apiVersion: v1
data:
  config.yaml: "peer-service: unix:///var/run/cilium/hubble.sock\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
---
apiVersion: v1
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: cilium
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRYldEZFVRa1ZScTFGU1EzazhtZjV0VEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBd01qQXdNell6TWxvWApEVEkwTVRBd01UQXdNell6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTSt0YkxSclBUQTJJNjg5UjB6UHN1dVIKL2w5RU5HajNXQjVDOXBWcWdGelR1ZzJpQnlQVWVpdklNcS9iY0ExTW5UVGpURUtoTUZpOW1pTmw0RXRzY3BqMwpmNnpvVVo3R3lsSGdNS3lUenlHNEZDV1JyYjlCTmNvbUxmZ3l3aVAwelRZcE11MFQwdmp3U1o5VUFlWXJZazdGCldhalRZQmpzKzJ2OFJNa3RSdkdzMVhGMHJQQXRUL0lMa1ZtL0dDclZ0SExzdUVOd2JFN0N5Ny9sY1BRcE90VEoKRmZINTVaRnlCK0I5S0UzZTNyU2o4MmJOS0dmUUNWc2FUOU56TVloYkdTRHF2ekJVckx4MWwxbXZlN01oWmdaRgpuZUYzOXM3SE1Hd0lGd0paeUVLMnRBbjVOcGNCSDZPcC9HWEdNbHpEcDFQOWZjOVhWVGlFL2VDazVhdTRrczBDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRtbXM0ZVF5UVFCb0VxRkxBUApxTkowWDFCME1EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlS1BhbC9kRlcyNmpYUVBaS0xDMTIxVFpIc0RoCmtmQm1vUVc1VWp6RWxhejluSktKc0hDSzg2OC9PUW4yb1ZVSDA5M1NGK1FnVmE3Y2xXTFd4SXcvQ2lpaDRMZW8KZkJUSGRqbFVhWmpCbE9Rb0VNYk9STHA4TkJzMnhSN0QrOS9KblNZcGZPKzF4di9HZitEQlhxckJsV0pjSGRrTQo2VVJrUTdxeUljSnVhSUlsV1AzMmNaNnhNM3VibC9qQ3BKUXkwcE1Vc2pyVlFGcUIrTlBVTUg3cmZKSGpnTFpFCnVuS2NxdzE3ZGtKUlhuMitSZWZiaWU2MDVpK3BjVWpOTUp6Y1ZOWE9kUVN6TkVXTldnWWZuMXNNNlFMZzdlTWcKQS9mNGhtOG5GQzhuUnJYaWRVa2UvVm43OUpLOHA1SzdVd092RDRUSk5JTUZhV1pTZFpORnBGSUJ3UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBejYxc3RHczlNRFlqcnoxSFRNK3k2NUgrWDBRMGFQZFlIa0wybFdxQVhOTzZEYUlICkk5UjZLOGd5cjl0d0RVeWROT05NUXFFd1dMMmFJMlhnUzJ4eW1QZC9yT2hSbnNiS1VlQXdySlBQSWJnVUpaR3QKdjBFMXlpWXQrRExDSS9UTk5pa3k3UlBTK1BCSm4xUUI1aXRpVHNWWnFOTmdHT3o3YS94RXlTMUc4YXpWY1hTcwo4QzFQOGd1UldiOFlLdFcwY3V5NFEzQnNUc0xMditWdzlDazYxTWtWOGZubGtYSUg0SDBvVGQ3ZXRLUHpaczBvClo5QUpXeHBQMDNNeGlGc1pJT3EvTUZTc3ZIV1hXYTk3c3lGbUJrV2Q0WGYyenNjd2JBZ1hBbG5JUXJhMENmazIKbHdFZm82bjhaY1l5WE1PblUvMTl6MWRWT0lUOTRLVGxxN2lTelFJREFRQUJBb0lCQVFDN08ySk93b1FXekNpZAoyOFJGVnRlN0ZCTmVOakorRThrbzl6d3lkeU1sRFdtbTB0WlhFai9XNnhYdmdBbmtvNWJ6MEp5M1VYVXgvRFpVCkJZd1MwOEg1Y09GMXRMbXBTUldzZlUvRXR6bTk3NlNTUG1XRGtUbjZkek5vbWZKMzBrT1V1YzRFK2FOeDljaWEKVVhXbzJxSTEzQ3k2VFY5TStaS3V4M0FJWTc2Yk1KSStiQkJWa1dpZTVrcDlsSU9rSGxnSEI5WFJRZkhJbkRvNgpTRnpnSEoybU1KMVdTYk5jaDVBUmhLaXByNmJMS2k5dE1aRW5Fd3FiSTFFVWJXTTU2S0pwMXNnOUpEcGZkN0RSCmpwOTNIZjRpNkFXSGUvOUpjSTVaTFF4bjkyWllyS1p4LzBXUVIvVCtqMWg4K3VGNVY3S0FEYS96ODR4R1FDeXEKNmU5MXdWRXRBb0dCQVA0cmk4dEFpc1JiUG1IMXkzbmJSMHNCb2lhR1U4eC9mMWRnNDBwZnYwUHFRMGFpUUdYSApRaDhtMjdjdkJKYWdlM3ZzelpuM2tHeXRDSjVXbXlETS9uVmFpMXZCWDkvSVVyYzJPUXladTh5cWdyZjhsRnpiCkZKTEZqU0UvUGxnQzBCWCs1dWFkRlFpLys3akdOWlRwaUloenUwVEsvOGhPdjJGVFdSdWgzVWNEQW9HQkFORXMKTUhBWGhKSVBrN2o5ZkpOTWJIMS9SeWo3TnNvY3NyekYrazdKRi9XekR1SG9jTWpJVU5PZjAzVlFLR3VqYW5rMApKRG9yRC92TTJFdnFsT2FVNmVxQlBSR0UyaFpISjlYVmpiK1V2Q3FIQVhjYWpWZUI2WFhvUVFIUHVaZEFyQTQxCjlVNTkrQXJRN1ZsQldRek04OTF5eUZJdTNyanB2RDE3aUpXcFRXM3ZBb0dBQnMxdmpsOEoxN3VCYmVuQUttQysKQmJuamR4aDlRYW5mNUp6Sk9JSmJnaHZROVNEK2pEckxBRDV2L3ZVWk1GYlhOemZkUU5PcFg5ODVyZE12ajY4cwoyRU0yRzV5UFRsUDBNc2NXdThtWmh4N0JKTjl6c1JDRCtuR2pGMUt6L25NRTBySGh5Q1pJRzlYWGpOaHhNcTBWClpHR0VqNURIUzdzZjBDRUU3NEpqZzdVQ2dZQnBNYjcrY0dWa2kxN3dWdE1TeFFsK3A4Yml6a3dFb3lBa25iQS8KZFJTT3BVbGp4V0VMS09xMU14akdVOVN3SlZRRHRueE5vS0IrTXN2SWlpWHVQSS9UTnNHK2tNQ1pHWm5vQ1drcgpJeUxxaEZEeFZESW5BeGVsQzNPOTlIalNuMXlvSE96TVY3K3B1TjdVMTI5d1o1WnhGU3UzWVFqemwrRHFUcmtuCkF5a0Vrd0tCZ1FDWStnbVMzU0NoTldRa2daaFRBTGxuc0lVcmNUNXBKVER4WnpwS0l1clhHbklPUVc3K2lCZXIKQjdqZW9RSWQ2NlRTYnJNL3dybHl4RHhOZ211L0lUUi9MUnJTQ0pkeWpRUE50WUx5R3oyeStDckhNUllpaE1RUApRaTF6bzliUlQ3WDVSMFozUUdubjRXNTNjVUlCTmZEWmlTc2ZhbERTZ2V3RFRFWWFXZHNSR3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: cilium
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRYldEZFVRa1ZScTFGU1EzazhtZjV0VEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBd01qQXdNell6TWxvWApEVEkwTVRBd01UQXdNell6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTSt0YkxSclBUQTJJNjg5UjB6UHN1dVIKL2w5RU5HajNXQjVDOXBWcWdGelR1ZzJpQnlQVWVpdklNcS9iY0ExTW5UVGpURUtoTUZpOW1pTmw0RXRzY3BqMwpmNnpvVVo3R3lsSGdNS3lUenlHNEZDV1JyYjlCTmNvbUxmZ3l3aVAwelRZcE11MFQwdmp3U1o5VUFlWXJZazdGCldhalRZQmpzKzJ2OFJNa3RSdkdzMVhGMHJQQXRUL0lMa1ZtL0dDclZ0SExzdUVOd2JFN0N5Ny9sY1BRcE90VEoKRmZINTVaRnlCK0I5S0UzZTNyU2o4MmJOS0dmUUNWc2FUOU56TVloYkdTRHF2ekJVckx4MWwxbXZlN01oWmdaRgpuZUYzOXM3SE1Hd0lGd0paeUVLMnRBbjVOcGNCSDZPcC9HWEdNbHpEcDFQOWZjOVhWVGlFL2VDazVhdTRrczBDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRtbXM0ZVF5UVFCb0VxRkxBUApxTkowWDFCME1EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlS1BhbC9kRlcyNmpYUVBaS0xDMTIxVFpIc0RoCmtmQm1vUVc1VWp6RWxhejluSktKc0hDSzg2OC9PUW4yb1ZVSDA5M1NGK1FnVmE3Y2xXTFd4SXcvQ2lpaDRMZW8KZkJUSGRqbFVhWmpCbE9Rb0VNYk9STHA4TkJzMnhSN0QrOS9KblNZcGZPKzF4di9HZitEQlhxckJsV0pjSGRrTQo2VVJrUTdxeUljSnVhSUlsV1AzMmNaNnhNM3VibC9qQ3BKUXkwcE1Vc2pyVlFGcUIrTlBVTUg3cmZKSGpnTFpFCnVuS2NxdzE3ZGtKUlhuMitSZWZiaWU2MDVpK3BjVWpOTUp6Y1ZOWE9kUVN6TkVXTldnWWZuMXNNNlFMZzdlTWcKQS9mNGhtOG5GQzhuUnJYaWRVa2UvVm43OUpLOHA1SzdVd092RDRUSk5JTUZhV1pTZFpORnBGSUJ3UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUpWWnkyUGlNZGYrejc3OS9sblRicWt3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRFd01ESXdNRE0yTXpKYQpGdzB5TkRFd01ERXdNRE0yTXpKYU1DTXhJVEFmQmdOVkJBTU1HQ291YUhWaVlteGxMWEpsYkdGNUxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOT000NUw0eURQS0lOYzEKckp4V1BWdlpxY2FDOEpydXd1Y09uVXFybHQ2d1ZWRFVUU3A2Q1BzTUZZVUVJR0NJdzlXT0cycURwWTY2VElqNwpaVlFwdUtiTkVubmtQSmd6MjEwcWVacHk0SjJ1OTdFdWRxa1RXcit1aGV5KzJCZEFaNUVubkM4eG1xdGFWRWsyCng0Q3dwYUFBRnYydXV4c3NwTDdPanhpNG81c2dFOUZCWUkwZVlOeGxrL0EzY202ZDZicml0aU1VUGtPbG1JZDQKUDJ6azh6WDVFSlpiN3E1aWdKRCtHaDYrTmNzSXErdlNOK3NSTGVkdzBYWmtzZ0FTcUwxSS9BM0FhOGhIVFNrcgp6dXBCOVBDYXlwdjJRdjVjcTBYdXpqQ3JaMXBrbWE5endENmdIL2tDM0haOVR4UFM0UVlacTI4NWpRZkdtTG9WCnNrWGVTYTBDQXdFQUFhT0JoakNCZ3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU1cHJPSGtNawpFQWFCS2hTd0Q2alNkRjlRZERBd0l3WURWUjBSQkJ3d0dvSVlLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFXWG03R3NJQkdBV2xGbDRTendhbCtKSzUwSUNlb2FkenkKSzBBeWxiQjRrZWFsZ05Ubks0SFE5RVdhc215Ym5CS0dwUVZReFdBMk1nY2s3eHRhbVRwd3RSQThmczZTRGhmdgpscFRYSS8xZWExTFlpWk5LMFBIT0x6VmxGUy9JeGtsUmgvQWZvSDB5Umc5QWgrTWpIVkYzaTdDT01zYjhwZDhkCnFvQzQzdmc0VGhHc01KRUxzTUM2RHd5NnEwakNuVDZEY1RsUy9uUFlFUDQzVit0WER5Njh3V20wSk9sOHExcEkKSCtPUndrc2hoWTUxUi9obEk5bWhra0hENk1pM2tpNUxoVDJNT0JCUmxzOEJTQktoY1UzcHJxTkxwbmNDOWVoSAptTWJYVG1qckYvaXAzaitXVjF0UnNkL2t6cmlRLzIwVDF1SDRROFRGVEdyRHYzNUR0Q25mCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMDR6amt2aklNOG9nMXpXc25GWTlXOW1weG9Md211N0M1dzZkU3F1VzNyQlZVTlJOCktub0krd3dWaFFRZ1lJakQxWTRiYW9PbGpycE1pUHRsVkNtNHBzMFNlZVE4bURQYlhTcDVtbkxnbmE3M3NTNTIKcVJOYXY2NkY3TDdZRjBCbmtTZWNMekdhcTFwVVNUYkhnTENsb0FBVy9hNjdHeXlrdnM2UEdMaWpteUFUMFVGZwpqUjVnM0dXVDhEZHlicDNwdXVLMkl4UStRNldZaDNnL2JPVHpOZmtRbGx2dXJtS0FrUDRhSHI0MXl3aXI2OUkzCjZ4RXQ1M0RSZG1TeUFCS292VWo4RGNCcnlFZE5LU3ZPNmtIMDhKckttL1pDL2x5clJlN09NS3RuV21TWnIzUEEKUHFBZitRTGNkbjFQRTlMaEJobXJiem1OQjhhWXVoV3lSZDVKclFJREFRQUJBb0lCQVFDNDVuNk9HZlhhRmtQbgo5aGpkT0I4L0paclhUK0QrZWN0T2FwNmVBaVhHazdhdUJERkIvQkhYWXZONEpHZ3NGNzJhN1M4WFJPTXlRYkRkClZXVjJUMVQrTFdXRnRqQWtFOGNhd2lJeEZWRXZZUnRLK01Kcit1ZXBlOS9BVWZuTE1OYVVyMXM2Z0krZ1R6NDIKRTdRQnplT2xXZzYrUWJkMkErb21mNkhneUpqdTNsNjhwS2xoTHcra2t0Tnd2cWcvN3pKNFpJUmd3MWR4bmczNgpnMnVjUlNFSnBkZlh1aERDajV2a05jeVFuVmVNbFgyMitveEdxdVlJeUhHZzBWNERSWTNtRzhYaFYrSXIrL2Y4CllWZWNtS0hwbFRzRUdxWXgvdHFjWmpLcXpzUTFHeGczdWg2RG5PSTdRQVBIYjg4QjFPUEdHcjMvVmgvRWtvaDQKZnVlcHg1YWhBb0dCQU9XMGRNbEtMZzVXZmNuTnZsRis1ZmRWNnhFSklYRG9mazhzZGlnWk9GTlkvS1JMYXZRNwpDQmQ0dC9zSzNIVUhUMzRCT2lJMXJDbm9ySTV2bjhaSnpXYXYzKzA4YnQrcDJRVzBKUVlSS0JtYnlBbkIzNUphCmNHRUhPNnVHOWpuZ29hZGhjNlk2QXFvN0MyZlhSMFpFakVhVVAyRFhLaGdXQ1crRDZXb0l5WlZwQW9HQkFPdkUKYVAyQ0tIVExZL0IyNHd0Tmg0ampNTisrc1hVRzdlTFE4czVRb3V6SWx0S1Y2cjNhdk1lc09UcVEycmppdkNRZgpUWGRKdkVCTXFaK2l6V0cydW5QMkhrK0ZxMlh4anpaMzJYMUN4UUxqSVhpWHF6L0xjc2RnZGYzMlBIM05FZ2d0CmY3ZnJuZmwrVEIvVWo4dlZaUU55MGZsSDlWeFh2TzdRQUVLSWFIV2xBb0dBWnBuUkpHdmU0SWFmanZrNFRqeUoKU1kzMS9sait0K2tSS2hvbytNWXpFMytHOFhmQ1lTN1E4WEw1Y3NlcUt4ZkYyUG1CVnZCMFl3L0xxNStPVlVwMwoxYXN2TVU4eUV2TlJ2YXQyY2h4TnRncVFNbE9Ib2w2RkhjSFdWRXBuUnZqZ0c5eDZoTUFhbXFEZStsWDlQeFMxCk4zMVdSZEkxdWlaMXRuck1VcEYwUVNrQ2dZRUF6QmR1TzJXYzE5M3BXWlBRMzB2eDg5R1gwVmdtRGdROWtZY0gKYVFuc3Y4UzBxdjhVQWQyRVplVDBkWHBIbkp6SitRc1A2Qjl3VXNrS1hTSjFZQXpxUXMvZlZUK0ZLKzU3NXM3QQordW45MlkzOHY0T3J2c0hEVGt4MlY2MzhsM29hRGZJMUNXVnhqelNCZVZ4c1Rpc2dFbWdtMUFBeXFnbFpoL0dQCkNBbEZRL0VDZ1lBMEdERHgvNmFvdGczemlyUjdCSnYvUUFHTVU2TlZUS3RBOHREUWo1eUNkMVBRN2FDSXhnWDcKRmpxZHFqSXZsMlZsbjlycHRMVkl3ZWFDMXp4allLdlNMalEwMXRneUlYSUtnbUVJdVhzVUtlazBGc3g5UTlVVApVVFpEbm8wZGkyaFJvc0ZrbGk0dGVXTU1nTWJyRk50blM3czJQR1NpVG5FSVJrdEZkRDhYaGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRYldEZFVRa1ZScTFGU1EzazhtZjV0VEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBd01qQXdNell6TWxvWApEVEkwTVRBd01UQXdNell6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTSt0YkxSclBUQTJJNjg5UjB6UHN1dVIKL2w5RU5HajNXQjVDOXBWcWdGelR1ZzJpQnlQVWVpdklNcS9iY0ExTW5UVGpURUtoTUZpOW1pTmw0RXRzY3BqMwpmNnpvVVo3R3lsSGdNS3lUenlHNEZDV1JyYjlCTmNvbUxmZ3l3aVAwelRZcE11MFQwdmp3U1o5VUFlWXJZazdGCldhalRZQmpzKzJ2OFJNa3RSdkdzMVhGMHJQQXRUL0lMa1ZtL0dDclZ0SExzdUVOd2JFN0N5Ny9sY1BRcE90VEoKRmZINTVaRnlCK0I5S0UzZTNyU2o4MmJOS0dmUUNWc2FUOU56TVloYkdTRHF2ekJVckx4MWwxbXZlN01oWmdaRgpuZUYzOXM3SE1Hd0lGd0paeUVLMnRBbjVOcGNCSDZPcC9HWEdNbHpEcDFQOWZjOVhWVGlFL2VDazVhdTRrczBDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRtbXM0ZVF5UVFCb0VxRkxBUApxTkowWDFCME1EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlS1BhbC9kRlcyNmpYUVBaS0xDMTIxVFpIc0RoCmtmQm1vUVc1VWp6RWxhejluSktKc0hDSzg2OC9PUW4yb1ZVSDA5M1NGK1FnVmE3Y2xXTFd4SXcvQ2lpaDRMZW8KZkJUSGRqbFVhWmpCbE9Rb0VNYk9STHA4TkJzMnhSN0QrOS9KblNZcGZPKzF4di9HZitEQlhxckJsV0pjSGRrTQo2VVJrUTdxeUljSnVhSUlsV1AzMmNaNnhNM3VibC9qQ3BKUXkwcE1Vc2pyVlFGcUIrTlBVTUg3cmZKSGpnTFpFCnVuS2NxdzE3ZGtKUlhuMitSZWZiaWU2MDVpK3BjVWpOTUp6Y1ZOWE9kUVN6TkVXTldnWWZuMXNNNlFMZzdlTWcKQS9mNGhtOG5GQzhuUnJYaWRVa2UvVm43OUpLOHA1SzdVd092RDRUSk5JTUZhV1pTZFpORnBGSUJ3UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRRnVDb1ZUSFY2SWowUFFQVFgrQWhDekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBd01qQXdNell6TWxvWApEVEkwTVRBd01UQXdNell6TWxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUt1WUowN1AKNzY3dmpyaUs5MEp6NmErVlN4Mys2UzhaYUdFaGxva0tycTBRWWZFalcvTlBtaWZ6U3RVYkFiVlhIeFlpcEIrNwphSXdMN0M0MEgyTW4yK1FTN3VGVDc4QW1ra1RWenVmdTdJRmhreUZwQlEza3dVVnNwbU51QWhLSXJxRE9COEJNClBPYU9aUDVZVHpJUkdUUVBDamU0ZkFqbTcxeWNYaHFhc3VTdlg5VGc2ekxjdnZFNUFUc1Zaa1N2T3BxanFzdHQKeVk4ZmdxM3E1YThQd3c3OGZmUFUvQnBnMGM0bGdteEFSMU9qLytob0U2MWZpcldocjhGaVpESU1zaHpSZU9HbwpoZld1SU1va0E0Y0N6OFBwN0tuLzFYVnVuVkxqaDI3NlVDaDJWR0J0aUdocmEyYmYvTWNOcUdIQURLcW9Db0N6CmZTRWVPUnhUaFJubS9TY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQo1cHJPSGtNa0VBYUJLaFN3RDZqU2RGOVFkREF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNQUFF0U2lmdFg2bE9yblUKbHY4bHkzUzZ1ekRVS3MzT0d4KythT2JzdzJ5RnRxRm1QVjQ3WDV5dnF4c2VwTjArOXZra1dSTFI0ODMxZEdhdwpNV1IrdU13WWNaUEFmMGlsdW95dk1lK0g0SjkzSGxndWFud216dThWeW51a0VVMmVyQStXNGtTcjh1KzRiU0lvClVuSDVzak5Sang2dU9iZS9QU2hvVmN6ZEdZajNTWENTVU05ODBmV1FzS29hTUZrZ3BjdGdHQXU2QUJDczNlVDQKZ0NXWEVqQ212SE51SHpZS2JnS1dXTFdGT29vQmNKWWdGWkhkdk1MeHhMQzRnRWlwQ2h0TGIrbVJGYWFBT2R4dgpaTGtHVVVlQVV6WmFMSEhHS3FTaGU0NkR4R3lON1FBYkNiUHFIeHZFWlJOQ2VQU2hjNitXa1JXaHlrNTA1T0JlCndOWUlJdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcTVnblRzL3ZydStPdUlyM1FuUHByNVZMSGY3cEx4bG9ZU0dXaVFxdXJSQmg4U05iCjgwK2FKL05LMVJzQnRWY2ZGaUtrSDd0b2pBdnNMalFmWXlmYjVCTHU0VlB2d0NhU1JOWE81KzdzZ1dHVElXa0YKRGVUQlJXeW1ZMjRDRW9pdW9NNEh3RXc4NW81ay9saFBNaEVaTkE4S043aDhDT2J2WEp4ZUdwcXk1SzlmMU9EcgpNdHkrOFRrQk94Vm1SSzg2bXFPcXkyM0pqeCtDcmVybHJ3L0REdng5ODlUOEdtRFJ6aVdDYkVCSFU2UC82R2dUCnJWK0t0YUd2d1dKa01neXlITkY0NGFpRjlhNGd5aVFEaHdMUHcrbnNxZi9WZFc2ZFV1T0hidnBRS0haVVlHMkkKYUd0clp0Lzh4dzJvWWNBTXFxZ0tnTE45SVI0NUhGT0ZHZWI5SndJREFRQUJBb0lCQVFDVjNDaFlPRm5IbWdnMwpPNForVHVWRUowcVhRODA3Q1NHVDB0VzVrYzdEN283YkhscHJ3SldOVm5tQWJEbXR1Z3k0TkVES1JjNGtvVFQvCmxSM2taeWN2cFNsak9QOGwvWW00L0ZIYlZWclFFL3QvTGt6dnVWemgyT1huNkdkKzhFZ3l3RDBjd0hoZmt2UzQKL1Q4TkpzbXdJWUoyNzNQRUFvd0JnYjdkMVVWdldodzd0ZDROcitMdjNjWXVjWGRYd2VKbGl5OWFTcngrNVcxMwpxNHF6RCtGcUs3QzFEV0pMYXdZR3FnUGJIQmswb3NZVjNISjlkVHdEZzk4TDRVZ08yQzFweFI1MU1oTFBFNlN0Cm10K3FlMmErbk45WnAwY3lML3Fwb2poUml4MVgweENBSDFjUnl4Y0NBOThIZll0cDNuak5pak1xeHl3WEhza3UKMjhhZzg2MkJBb0dCQU1yM1Bpb2lJb0xUNVZjKzR1bkppOTlnZ2F6SStFZE0vRy9XVlRIMUFrZXlPS0VhNFVqZwpOWDZNWHBsU2kwUXI0STI0VE9HS0xoZFRPK3g2cEpYQ0ExTmFuUnBxNTNmWTIvckExaVQ3QTE4MkZaczl5UVN5CjlJbmc2Q1dDVm5EbCtwUDNTZnA0TFVJcVphQkpXZURzd2tQTnBlU293OXY3VTZHdjN4MHRHWHpSQW9HQkFOaHUKYXJybEhtdTBqZ3p3T3RWU1NhL1JTUS9TZ0pJZXhxOEdOQ3NpNzJNcUxzaUp2V2VDZGREelRyNlJvU3VEaHBHNgpBKytxRy9VTnhqeVR5N25LZ20reFNWRnlaMzVheEJIUWFjOGpCTDlzKzhiR2VzTFZoRExJWkFrQ0NrUXZ5U0RHClBsYzBqdXF2VjVnLzBMYW8vZGdmeUEyWTE2M0FHdGt6YnF5YXpIaDNBb0dBZk1yTnp3d1QyZ3E4M1FyT2E5NC8KQVFZT1ZSVndDaTdjbTByV01SUXE1YmcvdDFhV283OHZSUEs3aTF2RVF4TVRTeS9CSFg5ZlhYb1F3eEtaTlhjSApvbTE1WU8vUUI5RXZXQnJPMEFnQ0I3MXlSWFFVcjYzMFN2NGMza3NvS054T1dFSFltNGJlbE9zS2R5WUNmQmcyClRZZ1k4dUdOSXltQlAwMnFTZjhieDdFQ2dZRUFrcVQxOGg1T0oySVdJWlFmK093aGUxeE5xY2ZTVDY5RXBkQ0oKUm5VTVNGK0xoVnMybDB6ZzhTdjZQY3RFcmN3WFFPUU55TFMwN3F4ZmxpbjZEcSsxQTJMWEw3VlpoRmFScFJSVwpyUCtvTnQvc0ZIbmxNZUFrQzVpVmx6am5wZDNPNUVNT2VGM25QQUtFVW1kaXpuRGdWakRxaHJQNTV3TlQ3YmtZCmt5RHJ5KzhDZ1lFQXgrTDdvTlc1V0QzbEVLK1lxcGZKVHAybnRZOHR1VHZZbUtid1ZmWTMzcmFYNHcrV3AyT3IKeGRzbEpUbWJKTnFielZmYTFhL1dPNk9meVRFQlRXQ3hmZk54ZVpPakxtcnh5TkFkeUZKN3NQcWxJOVo0SW9IYQo4K0R0Znd4ODl4M0t6anFuUFYybVFzQk5mWDJzZWh5L0l4WExZSGk1cWFpUmJkMVNMbkNXdzNNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: cilium
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: cilium
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.11.0-rc0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.11.0-rc0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        volumeMounts:
        - mountPath: /var/run/cilium
          name: hubble-sock-dir
          readOnly: true
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - name: tls
        projected:
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations: null
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.8.2@sha256:a6f80b0517a5266783d619ae14d846d4fbb692f6aaff37804fc8851bf1095a30
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8080
          name: http
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.8.2@sha256:43c1e824751639b1df9460e5c5d5a3fd732f834bb96b3012a4164eeee457cbb6
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        volumeMounts: null
      - args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        command:
        - envoy
        image: docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935
        imagePullPolicy: IfNotPresent
        name: proxy
        ports:
        - containerPort: 8081
          name: http
        volumeMounts:
        - mountPath: /etc/envoy.yaml
          name: hubble-ui-envoy-yaml
          subPath: envoy.yaml
      priorityClassName: null
      securityContext:
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          name: hubble-ui-envoy
        name: hubble-ui-envoy-yaml
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.11.0-rc0
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.11.0-rc0
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.11.0-rc0
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
