---
# Source: cilium/templates/cilium-agent-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-relay-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/hubble-relay-client-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU5RaUd1V1FWTHlVM2piMGtKc3pmSm93RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBNU1EUXdNakUyTVRWYQpGdzB5TkRBNU1ETXdNakUyTVRWYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMwRmNWL0dmTmFpWjNhbUx0ZHZMTCsKb2ViM0lSMWxPRjU1ek1yYmdPOTdXblMxYkhxTWlhbEhtbTFiWVhHb3FldmxWSHMxRlRnMDVSZWxuYVMzWWNaSgppZ2szWUZiRXpZeEhUQXNySC9tWEJrYk50ODdpK3cwYWJMSS9oL1REWllZVkZkbkQ1V1M0dXRrbkYzYTVYRVJQCjBDVzBrSVJHYVFWQlhBdGJHNHQ1ZTNNb3pXS2FVcEh1b0pJWFdYT2kyWU1mRFJTRVhOSzdPaFU1TlRsUVhva2cKMzNjL3JEWGNCdUNzUnBLNy9QZkJXcXVZWXFoVk1qcVcrTFhEY3VjSGJMUHJiemRLS2hVQnFLQlNMVW41NmlvdQpRamZhcFZ6b1ZkYjJmTEpuZjF2aFh6RHlVdUxDV1dSUUtGRFloZTdDdTYvdWJEYTdTV2pyditkTzdaeVU0TjdYCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdjVzTFJxZXpUQWJ3V3lCNApHNDZJZHR5WGxFTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQmpkL3g2NEtIOUNteFhzL3Q2bkZvOXB5R2lBCklqUkV4dEV4bkl2MDd3aDl5N1h0eTRWUjFaY3dkM1RNcXlSSG1zOEYybzV1N05qRUZhTWJyd1d2aHdlOXpDaFQKdUJzaHJpUUJrMVRiZHBUbENXM3d2akJzNnF5blVQaWRFRmdna0tSdmF5eWJBS0Y5SHorMmlVQ0swdXN4dnVJNwp2eEgvOTU3d1F4dWtpZDdHYmtTNTRZSnh4QW15bTBtRmV0S05qSE1FK2srM1ZBRUZuMk9DZnpkd2N1N0VrNkRnCmxmeHJiczZvd3JGb1pMQkF1c1NYcm1IUGF5eFFCbWh3Rll3bll2RjByWGhETzNDbWNDL3BRdkhpYnpXYWFtYkIKUjJEM2dSc2dVS0N3RlR1WFlTZlJmNm5rNzJPWXZSSGcrZVVrNVZiVC9BbVNiSDRqNVkzSzVWdlBDQjQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRS3hqcVl1UjI0YnU4YUgzaEoxMkNpakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TURrd05EQXlNVFl4TmxvWApEVEkwTURrd016QXlNVFl4Tmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXp4ZkNwMURhVjYzS2dVMVgKYW9kaUErenUveW9LMVhtV3UvQnVwSzZDUnN1cTBVM0NkQmVmOU1DNTgvd2tRMitQb2dBQ3ozQ1Z5THl4TDMzZApBbWw3akIxYlZxNS8wQzcxM0Y2SUtmSHdMZmZHa1NaRFBqWTRmbnN6T3l6SEFIUGtzWjEwYzllY1pWZ2FXZW1LCkU4WkRPcENpN2pYcWZvWFluSG1KNFA4bHJaVUIwMDd3Z1NRekZpOEdUaGtEQ0FIYjBONFJPczM3ZWJ6TUdlV2sKbWtBQTVWQnJpQi81OXhRSGZRQk9PTzNWR2NGaXpyejBWNXVCNjR1L0xManM5MkN2UEFpUVBYaEdtNTIweXgrKwpFa1hDOGtLamF2OThMM0FFRHJncFhibElnUTVzcDBwdTl6My9GTFdSMDFqZlRBRnZoRjloNEcxS01yUVFlQ2FnCnpLUDJZd0lEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUy9td3RHcDdOTQpCdkJiSUhnYmpvaDIzSmVVUXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTE9kSkFWOGJIdXYrL1diM0VoYWJrRmxXQUh5VDdCd01tTmQKQzJGK1ljOVFGdEg1TXlGbTM0N3QwdWJZemUxSUc0aWNwc1d1UmtvTldxNFFEcEliK3FBajdFMW03bEgyVUY5RAovY1BQYmQ3VGN4TzBFQnBZcEpFSk5OcHJ2OFJCZlNYUlk3cEp2WVNGblFWVEJFb2d6Yzd2dHl5TjBqb3ZzRkhtClVyZTdqQXBEdlNWT3A3ZHBQS1VwZDl2NWpFVXFlOFZuT1diSmNPdnBTUGFNeG5zUS9IclVqenpvSXFCY3VZUC8KQnVjS1dJdTRTblFDOEpiQi9BeGhTbWhNVnFhNEFVZUVjNU1BSXREaEZVVTJ2eE00c3JwZ3VLeVdJdDhzY2ZSMApOOGthUDN6d2VnelFIb3ZSamswZTJPN0JYcGU2OWs2Rit0UjE4UDN5SWJoYXF5ck9YTlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBenhmQ3AxRGFWNjNLZ1UxWGFvZGlBK3p1L3lvSzFYbVd1L0J1cEs2Q1JzdXEwVTNDCmRCZWY5TUM1OC93a1EyK1BvZ0FDejNDVnlMeXhMMzNkQW1sN2pCMWJWcTUvMEM3MTNGNklLZkh3TGZmR2tTWkQKUGpZNGZuc3pPeXpIQUhQa3NaMTBjOWVjWlZnYVdlbUtFOFpET3BDaTdqWHFmb1hZbkhtSjRQOGxyWlVCMDA3dwpnU1F6Rmk4R1Roa0RDQUhiME40Uk9zMzdlYnpNR2VXa21rQUE1VkJyaUIvNTl4UUhmUUJPT08zVkdjRml6cnowClY1dUI2NHUvTExqczkyQ3ZQQWlRUFhoR201MjB5eCsrRWtYQzhrS2phdjk4TDNBRURyZ3BYYmxJZ1E1c3AwcHUKOXozL0ZMV1IwMWpmVEFGdmhGOWg0RzFLTXJRUWVDYWd6S1AyWXdJREFRQUJBb0lCQVFDVTZrc0lzWFV3VTBJcApGSXBsaWhDTExoYjEyUytOTGkrYjJWcFdoVDRjMWx0d3dtK3Z0MFZJWkVYVEVsNnBOMUdiZGxLUEJEQlE5bzZhCnpmRGN5U2tVS2hBQ0Z0ekZ3TjcrcGVOWDlpZDFocFI4ejN6UEFZSkNRU2tueGgwYlVEc0ZGV29sMnNjVmdQTUIKOEpOZmdOUGJDeUorRkxzWVcvclZHZmh4bUVkcHQwOHp5bzN5emIzcjNkVkdvYkZNNXUwSVhqTzkrSjkyblo5MwpWd3Z5MmQ3Y2YwZnZGQ1Y1RDAzMnVtMW85cTJUdjZDS1Y1NDhaZklIM2pCL0ROSWhWcXB0S0taZVU4L29JTjdVCjhyQ3haYXA0dnlaYU95SzVGNCtvR1Y2YlBMSm15dEtDbDRaTEpCV09YUDVPUCtxamFyaUpYaHVMUldGSmVFZlkKWVF4RDFnZ1JBb0dCQU9xWVBvTitha1lDMlJKVTlsaGhBdGExeG1mMTdNZnBQK2ZFenIvYzlLLzhUZ1p5cGlxVgpKR2lwSG80K0d6N3NjUE9LN1VWRFJMTU1aNWVVN3UvblN5SVNzN2RjckZNR0xHOGFFZjdDTkExdXNRUjFXbHJGCmlwSHAwT3RxZ2FPRENCcUs1YWtNdzZHMSt4dkVLdnZNZm1VR3djQUEvcUdpWlkyUFBXTVhuOE5IQW9HQkFPSDkKSGJ4NkhpczJNTHhtRnhNVzVqSG5hZ2tCaWlMdlhJOEtlQ1U3U21wMkkyamlieHNHaEptQS9wZ3FLMmxwdVorQQozbXlETzJJLzNkazdRb1lOWlhZRllzY3NyeVlCbFZrVjhhZFlZT2x4cDhTRmZtSHZ4eUUvdm01ZXE4UWg5L2o0CmovY3NBck1PUzZsVk8zYm1kNTltSDR1QmxHdWV3a0VuZ2VmR2FLb0ZBb0dCQU9kK3FwbVpnb2Rwd2drYi9DZ0UKT3dmalFsRk9WWVNFUUVLV2JDcmFnRDYxYTgxakQyUVAzbWpGRWxqdEluZTZYRStIdFZIVzZwRUEyYXkwRkFCNgpyaUtHYi8rdUhJS2xJZTNVdlJNM1VxUTZxY1dyaENqMHJDUUdwZG5aTk9wRW9CZUpIczN0d1pMdkFFZExFZHQ5CjFQQWVkY3poYm1QVDNBQ1A2OVMvK0RCN0FvR0FGWllMNVJqMUVNT1lYQ2FVUmFxR1NuWUVWdC9peGZ0L0o5cWsKSjBwR2pXekRiUjFUNTR6ejFZWFF5OUFiWFhKUDNNQitmbmI2a1NQd21QTmtJMUhjUXkyNGhiWHE5UUpwdFp5MgovSGtncUt2R2pxc0JxM0V2NENrcWszaFBoK2lHdXkxaTh3VXRMTlZNdk52N1Zod2xpUUJFT3hzaGhqWWY4QUZLCkUwMk1hZEVDZ1lCNjRETEtUaDYrTi8yak5ENjdaOUJmWDNCVW56VGg1cTdrMk1TVzVTSms2MXZrV1hlbUdKVXgKS3cwVTRFMEl5dU1rWVJtMUhKc296Y2oxRzhGT2JVMStaUUdPeXVzM1p6b2YzVENHZWVHRlRDckRpRXREeTFhZwpFNDZWT0xreHNIR3dNQTV5VXR5S1R4a3FXeXp4aUhCd0xqbTdidlpsYWZmdXhUUXp0Zi9xVVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble-server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU5RaUd1V1FWTHlVM2piMGtKc3pmSm93RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBNU1EUXdNakUyTVRWYQpGdzB5TkRBNU1ETXdNakUyTVRWYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMwRmNWL0dmTmFpWjNhbUx0ZHZMTCsKb2ViM0lSMWxPRjU1ek1yYmdPOTdXblMxYkhxTWlhbEhtbTFiWVhHb3FldmxWSHMxRlRnMDVSZWxuYVMzWWNaSgppZ2szWUZiRXpZeEhUQXNySC9tWEJrYk50ODdpK3cwYWJMSS9oL1REWllZVkZkbkQ1V1M0dXRrbkYzYTVYRVJQCjBDVzBrSVJHYVFWQlhBdGJHNHQ1ZTNNb3pXS2FVcEh1b0pJWFdYT2kyWU1mRFJTRVhOSzdPaFU1TlRsUVhva2cKMzNjL3JEWGNCdUNzUnBLNy9QZkJXcXVZWXFoVk1qcVcrTFhEY3VjSGJMUHJiemRLS2hVQnFLQlNMVW41NmlvdQpRamZhcFZ6b1ZkYjJmTEpuZjF2aFh6RHlVdUxDV1dSUUtGRFloZTdDdTYvdWJEYTdTV2pyditkTzdaeVU0TjdYCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdjVzTFJxZXpUQWJ3V3lCNApHNDZJZHR5WGxFTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQmpkL3g2NEtIOUNteFhzL3Q2bkZvOXB5R2lBCklqUkV4dEV4bkl2MDd3aDl5N1h0eTRWUjFaY3dkM1RNcXlSSG1zOEYybzV1N05qRUZhTWJyd1d2aHdlOXpDaFQKdUJzaHJpUUJrMVRiZHBUbENXM3d2akJzNnF5blVQaWRFRmdna0tSdmF5eWJBS0Y5SHorMmlVQ0swdXN4dnVJNwp2eEgvOTU3d1F4dWtpZDdHYmtTNTRZSnh4QW15bTBtRmV0S05qSE1FK2srM1ZBRUZuMk9DZnpkd2N1N0VrNkRnCmxmeHJiczZvd3JGb1pMQkF1c1NYcm1IUGF5eFFCbWh3Rll3bll2RjByWGhETzNDbWNDL3BRdkhpYnpXYWFtYkIKUjJEM2dSc2dVS0N3RlR1WFlTZlJmNm5rNzJPWXZSSGcrZVVrNVZiVC9BbVNiSDRqNVkzSzVWdlBDQjQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUsvKzZKYmpuV25hV0tLakpDb0Z5a293RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBNU1EUXdNakUyTVRWYQpGdzB5TkRBNU1ETXdNakUyTVRWYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEdTY1M04KQWxqZ2RvVWhqTklJTG02TlhDdUFoc2lFWEl1amc4SUlldHhsNFBHUXU1c1hpVjBkaTRqYWpLSTI2VVZONllSbwpvamloREFoL1VKV25CTHV2Wm5mTFJLejhIWEhXcGRxRFZzMThNYkVEckowOXg3ZXFSaTVzYnZITnVWaU9PRmFhCnVQKzBXeUhVa1FMQmhNWkVHR2d2RWR6T0tMcUMvZkhQRkhXbE1uTXczdEFHcTNhcmg5VWtORmp6M3lBMTJKUGUKeWlmaTFVbXE3RmZOa3Q2RzRnMCtKdC9uTTJJSXdEbWNOTFNCT0pMNWJRYTdGR1BSRFFyakVrTmR6aUhaVks0QwpBMGlDZmRYcTJIKzRxaTdPZC8vbk9ETm5NSkRZV0V1cTNJOXl4bEo5S2FuTWVzOHg0aGRkTlJwUFdWb2J4QnVqCkVFWDMvRGFPWTl6enhsOEhBZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGTCtiQzBhbnMwd0c4RnNnZUJ1T2lIYmNsNVJETUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEVGxmTzNaZjdkSFNoMW4Kc2Q0UEM1bVA3K0kzRnVac2ZTUlJVWmZ5aG5SSjNJbG1XVVd4ZGhtb2xSdWcyQThPdGtmNkM4NTVhSkZSOFNFdgpRTC84QnE3T1BnQkVOTE1FZFV5K0w2T1kyVHhmYWx1bzhZaFQvMkpteGxReTNNOFRkaEJVYzIyUzdFMGdSd1VNCjRFT3U1VmJoTERET2tIS1FueDhIZC9XaytqZjUrUjFONjZadnoxZGQ1Y1ZGVDM1UFdnOGFiamxMcHJoaDJwVHYKOWFVMm5YYnQ5WnNEMnVzR1dkb0IyWHRqMTB5VkN5cFozRDlleGhRZWxDUFJZMWtjNmhWYVpLbEVxWWRsSC9BUAo4MTNueFBIZzdMcVY0ZjVaQlpmNXVOSlRhTW9ra1ZWaEE5b0NvZnllQUVvbjE0c2s5REJwWHZFenZOSURHd29wCkxpemFiMkU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN3V1ZHpRSlk0SGFGSVl6U0NDNXVqVndyZ0liSWhGeUxvNFBDQ0hyY1plRHhrTHViCkY0bGRIWXVJMm95aU51bEZUZW1FYUtJNG9Rd0lmMUNWcHdTN3IyWjN5MFNzL0IxeDFxWGFnMWJOZkRHeEE2eWQKUGNlM3FrWXViRzd4emJsWWpqaFdtcmovdEZzaDFKRUN3WVRHUkJob0x4SGN6aWk2Z3YzeHp4UjFwVEp6TU43UQpCcXQycTRmVkpEUlk4OThnTmRpVDNzb240dFZKcXV4WHpaTGVodUlOUGliZjV6TmlDTUE1bkRTMGdUaVMrVzBHCnV4UmowUTBLNHhKRFhjNGgyVlN1QWdOSWduM1Y2dGgvdUtvdXpuZi81emd6WnpDUTJGaExxdHlQY3NaU2ZTbXAKekhyUE1lSVhYVFVhVDFsYUc4UWJveEJGOS93MmptUGM4OFpmQndJREFRQUJBb0lCQUZ2QmJ6UDVqOHA4bWZwZAppNWdLeFBoVENuM3N4WHRYMDJUenlBUGJzMk1JOVp6Zy85b1ZMZ2FYdlBJNkNsNU9UZ2h6QXgvd0ZSRjhmcEx1Cmp0cTZ6WjI2RzQyY0RWY3hzN044dEtPMkpXcHA1eEtESzB3N3RFU1hlV0s1WlBIZUdhMWM0NTIrS0szS1JmN04KeGlJdDdMcmdLTHJUQUZySWQ0Q3hLRG1nSU9KVTlNRE9vV21rWlZUYVE3MEM5WVFMRTR1QlhSVHRPR0RCb3p1VApzbncrWlg5OW1DazR3aFFWWVBwQXlmcXpLS0sxbnAvdU8ySWFHa3lvNkMyVGhIZ0g3R0l1WDVncmdpb3JDdWR4Cmg4bVhNZy84cEpHdi9yRUVyaEs5cWVqdTArZTFsMEhGYmlyZmZyZ2JnYjBRVDJTNXVkZW5BVkZEMTdXazFnV1cKbmNnQzd4RUNnWUVBOUZRNXJzeDJRNUxXbld0MG1WZHVhOEowRFZpOHhuSWUvS2VNQ2FyRFNOUmVtQkxhTXB4Zgo5bFFTSE1oRlFnUnJ0cE1qckxiVVpFbjZOc29qTmhKMkE1d0Jyd1BMVnRTZHVmTktzeDVKVUhOS290dGs5WU1nCjVyZ21TOUtUUE1nblJ2WjA4dm1GSHhXOHI0RlcyOE9LTHFLVU5yT2RaRFhsa2UwR2VHblBZdmtDZ1lFQStsVkEKY1VNWmMrVVkvNzhiNzIwVHNXeUp4dHFTZlJObXBtSytFc0hDRWQ1MlpyK0pPU2lkaGM4V1NMdHVjU0xWUDdJZgo4UG1MZnNXMHVjOWJyaXJTb0dQRGlIRVNOeXdqblhQQUltVnY3NHN3UHhhcGR2RDBYUytySDBIOUYxSnVla21QClFReFVOcU9MSEFsZnNHY1VabElDVHB5ZmFXMXEzK0k0YUFWeVVmOENnWUFaVndib2Z5SWczZ0RPTU0vVis0QmoKUXJhZ2o3eDhaR2VjVXBBdWpIeFdlRmdiTTVGWHdHb2ZkUmF2ejRHSFdFZ0hsbmtUdDU2TmpES2NMaGk2eWUxZApjSGVvUEIrQnNPbHUyTEc5by8xOGo0aUZIWFg2RkpCNy9VdFRmOUp2Y2w3SWVGVW13Z1F4ZGlLc25TQnlDSFN6ClkzODFzU2s0dEhKTDBTWmpwSzJ5bVFLQmdRQ1BqSVY0clg2UisrUzYrdzc4Mi9LNEFrSjdlbWtZT2lEWjlyT0MKTkFPaWxZd1YzVzNHRGlsT1N2TS9YK08wRXNKd1ZTZUYyc09JUGIwbDgrZGgxNEtTb01MR29maE5GUTJUUTRZQQo4MlFkM0JZZGgxUkVOV1liYmJOV0tGUUdwS2xmaklFT1R4Q1hpRzdEOUFnZ011djZ4TG8zOUE1aHVYSFkwbk9BCkN1ZUVad0tCZ0R6VFhjazU3OXBjaTc2VFg2UUxnUVNHcDB3Mzl0Y0dKbDhBb1JoaVIyQWxOYUNpelpoczdxTkoKaVBMMmpDVGFtRmFiNkxPczAyajNyc1pWNWdsZFJHeEVpTHo1d0Y4ZmxwQ3F3K0ZCdnRoR0ZSUWdTNTFXSjlJdQo3WW5TL0JWZTBDTWFpc2N1ZUJLU2t5clFqQi9kMzJXMVNlM1pZbjQwaG82UDByRjN6QWRTCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
---
# Source: cilium/templates/hubble-ca-configmap.yaml
# NOTE: the hubble-ca-cert ConfigMap is deprecated and will be removed in v1.11
# The Hubble CA certificate can be found in both the hubble-server-certs and
# hubble-relay-client-certs Secrets under the ca.crt key.
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: cilium
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDKDCCAhCgAwIBAgIRANQiGuWQVLyU3jb0kJszfJowDQYJKoZIhvcNAQELBQAw
    HjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzAeFw0yMTA5MDQwMjE2MTVa
    Fw0yNDA5MDMwMjE2MTVaMB4xHDAaBgNVBAMTE2h1YmJsZS1jYS5jaWxpdW0uaW8w
    ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC0FcV/GfNaiZ3amLtdvLL+
    oeb3IR1lOF55zMrbgO97WnS1bHqMialHmm1bYXGoqevlVHs1FTg05RelnaS3YcZJ
    igk3YFbEzYxHTAsrH/mXBkbNt87i+w0abLI/h/TDZYYVFdnD5WS4utknF3a5XERP
    0CW0kIRGaQVBXAtbG4t5e3MozWKaUpHuoJIXWXOi2YMfDRSEXNK7OhU5NTlQXokg
    33c/rDXcBuCsRpK7/PfBWquYYqhVMjqW+LXDcucHbLPrbzdKKhUBqKBSLUn56iou
    QjfapVzoVdb2fLJnf1vhXzDyUuLCWWRQKFDYhe7Cu6/ubDa7SWjrv+dO7ZyU4N7X
    AgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAdBgNVHSUEFjAUBggrBgEFBQcDAQYI
    KwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUv5sLRqezTAbwWyB4
    G46IdtyXlEMwDQYJKoZIhvcNAQELBQADggEBABjd/x64KH9CmxXs/t6nFo9pyGiA
    IjRExtExnIv07wh9y7Xty4VR1Zcwd3TMqyRHms8F2o5u7NjEFaMbrwWvhwe9zChT
    uBshriQBk1TbdpTlCW3wvjBs6qynUPidEFggkKRvayybAKF9Hz+2iUCK0usxvuI7
    vxH/957wQxukid7GbkS54YJxxAmym0mFetKNjHME+k+3VAEFn2OCfzdwcu7Ek6Dg
    lfxrbs6owrFoZLBAusSXrmHPayxQBmhwFYwnYvF0rXhDO3CmcC/pQvHibzWaambB
    R2D3gRsgUKCwFTuXYSfRf6nk72OYvRHg+eUk5VbT/AmSbH4j5Y3K5VvPCB4=
    -----END CERTIFICATE-----
---
# Source: cilium/templates/hubble-relay-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: cilium
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: cilium
  name: "hubble-ui"
---
# Source: cilium/templates/hubble-relay-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: cilium
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        startupProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: "quay.io/cilium/cilium:v1.10.4@sha256:7d354052ccf2a7445101d78cebd14444c7c40129ce7889f2f04b89374dbf8a1d"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        name: cilium-agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        env:
          - name: CGROUP_ROOT
            value: /run/cilium/cgroupv2
          - name: BIN_PATH
            value: /opt/cni/bin
        command:
          - sh
          - -c
          # The statically linked Go program binary is invoked to avoid any
          # dependency on utilities like sh and mount that can be missing on certain
          # distros installed on the underlying host. Copy the binary to the
          # same directory where we install cilium cni plugin so that exec permissions
          # are available.
          - 'cp /usr/bin/cilium-mount /hostbin/cilium-mount && nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT; rm /hostbin/cilium-mount'
        image: "quay.io/cilium/cilium:v1.10.4@sha256:7d354052ccf2a7445101d78cebd14444c7c40129ce7889f2f04b89374dbf8a1d"
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /hostproc
            name: hostproc
          - mountPath: /hostbin
            name: cni-path
        securityContext:
          privileged: true
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: "quay.io/cilium/cilium:v1.10.4@sha256:7d354052ccf2a7445101d78cebd14444c7c40129ce7889f2f04b89374dbf8a1d"
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - mountPath: /run/cilium/cgroupv2
          name: cilium-cgroup
          mountPropagation: HostToContainer
        - mountPath: /var/run/cilium
          name: cilium-run
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
        # To keep state between restarts / upgrades for bpf maps
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      # To mount cgroup2 filesystem on the host
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      # To install cilium cni plugin in the host
      - hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
        # To install cilium cni configuration in the host
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
        # To be able to load kernel modules
      - hostPath:
          path: /lib/modules
        name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
                - key: ca.crt
                  path: client-ca.crt
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
              optional: true
---
# Source: cilium/templates/cilium-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: cilium
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: "quay.io/cilium/operator-generic:v1.10.4@sha256:c49a14e34634ff1a494c84b718641f27267fb3a0291ce3d74352b44f8a8d2f93"
        imagePullPolicy: IfNotPresent
        name: cilium-operator
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
      - operator: Exists
      volumes:
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# Source: cilium/templates/hubble-relay-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: cilium
spec:

  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.10.4@sha256:be17169d2b68a974e9e27bc194e0c899dbec8caee9dd95011654b75d775d413d"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - mountPath: /var/run/cilium
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
      restartPolicy: Always
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
        name: tls
---
# Source: cilium/templates/hubble-ui-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cilium
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.7.9@sha256:e0e461c680ccd083ac24fe4f9e19e675422485f04d8720635ec41f2ba9e5562c"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.7.9@sha256:632c938ef6ff30e3a080c59b734afb1fb7493689275443faa1435f7141aabe76"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.18.2@sha256:e8b37c1d75787dd1e712ff389b0d37337dc8a174a63bed9c34ba73359dc67da7"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          command: ["envoy"]
          args:
            [
              "-c",
              "/etc/envoy.yaml",
              "-l",
              "info"
            ]
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
