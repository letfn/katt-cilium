---
# Source: cilium/templates/cilium-agent-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-client-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRV0g2dWFQSlFDVklPaFhvSTkxVytFekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1USXpNemd5TkZvWApEVEkwTVRFeU1ESXpNemd5TkZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTNWZC9FMnNyMzVKR2FhNEM2WTRRYTYKWC9OUDV6V3pHSnVHekRvcXZBWW1SRDEzTm1oR0lSeExmMEJnU0NYdDYyVUY5SEdlMFhpL0J2WWFSRnQvQ1lXVApMeUJ5VDNZOHRYamV3ZHpCUXJ1RURVeEpGMFRtdThDbFJyeE1OS1loSjRWR2Fkc2FjaWhuOWxCcEJCbjhTSURFCm9xbUg0UmJlY0tsY2FhL1BmS0JnV1ZwZFN5OC9wNWMwd1FvUUx4OGFyY2tNdjRpRU9pOUlsajBOWU9wQVJMVFAKbXIvWVExZnRuOHhYMjh4OWdtUnhkLzJTSGhpOU9VNDZqdE1FcWNBSlNNRCtucEFIMHNvaXVDSWJLSTdqcDBmSApBbkdiTCtpQ0g2bU1nRlljMjdVL0Z0ZVBLem4vK1hHVFdPckdSYXdudkxFdDY0ZDJaek5KdVRiOEowdXhYQjhDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNBRjJ5REpLTW5RMC9ucG9uTgo5SjZWbFlzSE9UQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFHWVVCYWxRK2hPRmJGUFpSU1ZhN0crRi9KTTdhCmx0ek9JZmJHNjFhUHhXd3VvcUtobDUrSjkxanRLM2o4WFJhbHR5SnkybDNjSm5aMTA2QnNraUtIU013eDh1ZWwKSk1QRW1MdWc3Z3JMY0I1dzk3bk16WlhVcHJTRVhwY3luTHM0akxGSk1FSmYwa0UzcGJKYm9ndlFjaitFeGNEcApVMWNHTEM3WVkrL2ZsRWhKaWtvTm0wYnIxSXduMVJJM1VKVlRKSFdNMDJJeW1uS1BveG50azNBZUhQQ3piQi9YCkVxZWZSak9QTC9oTUEzMWhoNFB3QWQ2SEJ0NmxhR2srNDlaSlVBaXZUYlY1cFQ0UHpaeUhydzhiY0t0UUUwb0UKVi9ES1ptdFpWS1huZEFlbDkyRUsxWjhWbTdxUzhkUmRSVXNGVXRTMG5Ld1dxdE5NdG8yeWlTVnZUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRWWl0Ni8zYVdKUUpwQWI4Yndxb1piakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1USXpNemd5TkZvWApEVEkwTVRFeU1ESXpNemd5TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTNMaDJ1dldHZ3VkUkl6WmcKT3F6UUpWVjY5eW9ydnhUTDliUU5zMzFkd080VEhhWkxRcFNQVmFXVDRzL3RBT2FiK3ZMNm53QXlSZ0NRSUwxMQpuWjE5NnAyRHdURkpma1A4aXNjUFhVTmZxZlB2WGt4KytScC9CdkxsQUVuVXhIK0dDRXpySXlWOEF0dmEwYWNjCnJwbGp1anplb0ZHN1phTEZESHJFNmJ0RmkrV3ZqalZOWm96dnN1SVdkOFNjRnZqdEh6QVV2ZzV4SzY5OEhZanAKNURGUEFzYTVqemVzUjg2ODU5Wnhid01zL2RqTzlqdU5hejRaRUtNTDNWcis3Z3BtZ0piWmpLZmR6SVZpcHMzVQp1eUt4Y2hWMERqcWdza2pzcnN1RXZlSjVwelV2TkVteGNicVI0RWFkZG1XS1FWZ1VMNkNDVktST3pCeXMrRjVRCjVER2REUUlEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0FGMnlESktNbgpRMC9ucG9uTjlKNlZsWXNIT1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRDJpNmhsN1k3aURBN2wzeTNvWXI3WHNERnhkV00wbnI1c00KOVFnVkR2N0dpUzcvQkdNV2NQOEpDaElMc3J6VVY0TG93M0RpeE54ek9TWE1pdHRNS1NKVXg5R0hnNU5FNmdTWQo5S2pHYXpIZ2k1L3V0UFViQnNRS2REVW0wa3JoMVRyN0ZXblZadmhWdnBkUkFpKzhjeWJpcjZyNXBTcjhxd2tQCk9LQUl6ZmJrNGRiU2xsdkxkTzhKbHpKT1VVWmNvVGhjdW5KTUhwM2tHWnptSUNiRCtsM29sVlNWT0tIblZFcFYKUmxTSHU5QjZsS2lhWDYxdTZ6YTJiZ2Z6aVJpOGJ1NE9VVEc2TlJUbEZRd1A2QklheDh2ZzNBZU1mSjZFYjQvbgp5WkRSbVZwc2Erd3kvWmdTZG9Yb3AvMzlnd3IrQVlnVDlLbWxKUmx5S1pOSHlic2xxMk09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM0xoMnV2V0dndWRSSXpaZ09xelFKVlY2OXlvcnZ4VEw5YlFOczMxZHdPNFRIYVpMClFwU1BWYVdUNHMvdEFPYWIrdkw2bndBeVJnQ1FJTDExbloxOTZwMkR3VEZKZmtQOGlzY1BYVU5mcWZQdlhreCsKK1JwL0J2TGxBRW5VeEgrR0NFenJJeVY4QXR2YTBhY2NycGxqdWp6ZW9GRzdaYUxGREhyRTZidEZpK1d2ampWTgpab3p2c3VJV2Q4U2NGdmp0SHpBVXZnNXhLNjk4SFlqcDVERlBBc2E1anplc1I4Njg1OVp4YndNcy9kak85anVOCmF6NFpFS01MM1ZyKzdncG1nSmJaaktmZHpJVmlwczNVdXlLeGNoVjBEanFnc2tqc3JzdUV2ZUo1cHpVdk5FbXgKY2JxUjRFYWRkbVdLUVZnVUw2Q0NWS1JPekJ5cytGNVE1REdkRFFJREFRQUJBb0lCQUJiV2EwcUs3d0VLYUNYSgprWWxncWlUQ3hIZGdnS2hEd1pySnA0VkQybmlFNmF0dXNtalFNRWgvV2w3a2ZyUlNLQjkrRnBwdkRjU2FlRTg2CjZ6bUV1eXVVWXJhUm4vWVZtTUxQTi9MQmJ0dUo1dUdON3JGZG9Ya1psc0pCNFdiM2Z1bks4NlZ1VW5lRlFnM2gKU2FGek01Tm9pdXh4cUg4cXFWTFNQUittQmRza2xxVjI4cURlaUpUOHV0cGxWOCtqSXErMFFQaDdzenZXK1dkRwpFdFBVUmk0NDZRVTJRQUVjQnAxQUVKcnVmSXg3TDdIemU3am8ySGFBMFhhQkdhd3o0WW1ieW5ScVhqcGF0cUk3CmVMSGN2akc0USsxczhhRERqVXRoRzlsTE91ZXdyTE9qaWk1SmVhK3hXNWxuS0VuTkMyRDluNE1yZWFlZ0NibWQKcHQ4ZmVpRUNnWUVBN3lRS0lMZm1aMC9yTjRhRGZqVDVEb1BBaHRZbFl5dnNXOW1zZUdjL284bGd1YjFKSkV6RAo1YitieXZybUt4emRIbWdnU1BocUxqaTBFOE81ZS9DSDgyd0NvVWI2YmJiMWM4dG83VkZDNXUwQmdRNXFKOVg5Ci9ncGEvaGx1aSsxWWdWTGFtRUMxMFlYVGhYdzZHSkJUNmptN0RISGw1d2RiL0I4b2VWbzlWNmtDZ1lFQTdFZjYKN0Z2YVkwR1VUaFRGcUhrZi9Ca1VGNWx2YlRwMXBnejlHRzc0eEJXYkNFOU1PWTRXWFl1NEczeVJBTFd3NVMxTgpZSmpjWmNwVStsQzZkWjFMa1RBOVBFM05ETmZnZGF4alpZZy9tdHZRNEZMTW5veHdkTDN4N3R5cDFPejFBOHNtCm5zM2tzMUtGRnpHR0xOVVlXcytkZkRLOTY5SzdsTHhrRWdhczZNVUNnWUVBek1PYk9IQy9CRzlXQlBGVTNsZ1YKZWV3dWlrWUxOV09DdXhNanJ1VVpoUEVGdFlUeWYvYUxOc3BlWit0MThpeUEyV3huV0pQOHR4OHVjazRCSUxMUQpkZ3BpSmg1VWlHVkV2cVhKYm90S01kbDJsRDczZnF5cEUwRmlzSGl1UTNvemNtaXphL0xjdkU5TzB0bVFGVUJmCjJnc2Nzb2RFU0JIeEhXekFoMGhSaGlFQ2dZRUE0SmlyVS9FYjdpMXdJNmhyR25ISWpZSHBMMldTSFduc1d5TU4Ka2lRcUkzbkdIR2dFTk5GelFRaUd3Tm52bTVVWnlUNyt4a3VIZE5xWFhEbFFoR3c0WUpKU0l2aHhhVHZyQ1BBTQpxMzZQdDB3cmlKQXNJS211VzhvU0p0TnFQQlBoOHZFd2pOTjZDVnJ2VjlTampnb2hWSEQxYWhGeHByQnh6amdsCmgxMEJEMkVDZ1lFQTNjbnpMemhXMDJvaEpoS1A0K0dCNmhsMkk2dlh2eGFIVEVPUUo5NGoycmthL2FvOUUrRFQKUlM3WkQ3cFlMSnJFKy9UUGxFNGRSaFFxQUhzT0Z4ekZKaEFTcXlnUnVKamo1b1FRVk10VkpYSGVlL3JMWHoxVQoyNFJPZmZzTnp5NjFnN1BtVkNDVjc2Z2dBUGZMdG9yMHFJczYrbFlWY3lQd0NQK1dydnRlKzFvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble-server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRV0g2dWFQSlFDVklPaFhvSTkxVytFekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1USXpNemd5TkZvWApEVEkwTVRFeU1ESXpNemd5TkZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTNWZC9FMnNyMzVKR2FhNEM2WTRRYTYKWC9OUDV6V3pHSnVHekRvcXZBWW1SRDEzTm1oR0lSeExmMEJnU0NYdDYyVUY5SEdlMFhpL0J2WWFSRnQvQ1lXVApMeUJ5VDNZOHRYamV3ZHpCUXJ1RURVeEpGMFRtdThDbFJyeE1OS1loSjRWR2Fkc2FjaWhuOWxCcEJCbjhTSURFCm9xbUg0UmJlY0tsY2FhL1BmS0JnV1ZwZFN5OC9wNWMwd1FvUUx4OGFyY2tNdjRpRU9pOUlsajBOWU9wQVJMVFAKbXIvWVExZnRuOHhYMjh4OWdtUnhkLzJTSGhpOU9VNDZqdE1FcWNBSlNNRCtucEFIMHNvaXVDSWJLSTdqcDBmSApBbkdiTCtpQ0g2bU1nRlljMjdVL0Z0ZVBLem4vK1hHVFdPckdSYXdudkxFdDY0ZDJaek5KdVRiOEowdXhYQjhDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNBRjJ5REpLTW5RMC9ucG9uTgo5SjZWbFlzSE9UQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFHWVVCYWxRK2hPRmJGUFpSU1ZhN0crRi9KTTdhCmx0ek9JZmJHNjFhUHhXd3VvcUtobDUrSjkxanRLM2o4WFJhbHR5SnkybDNjSm5aMTA2QnNraUtIU013eDh1ZWwKSk1QRW1MdWc3Z3JMY0I1dzk3bk16WlhVcHJTRVhwY3luTHM0akxGSk1FSmYwa0UzcGJKYm9ndlFjaitFeGNEcApVMWNHTEM3WVkrL2ZsRWhKaWtvTm0wYnIxSXduMVJJM1VKVlRKSFdNMDJJeW1uS1BveG50azNBZUhQQ3piQi9YCkVxZWZSak9QTC9oTUEzMWhoNFB3QWQ2SEJ0NmxhR2srNDlaSlVBaXZUYlY1cFQ0UHpaeUhydzhiY0t0UUUwb0UKVi9ES1ptdFpWS1huZEFlbDkyRUsxWjhWbTdxUzhkUmRSVXNGVXRTMG5Ld1dxdE5NdG8yeWlTVnZUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lQVkRiZHVNUVNnVzI4UGVkNEppN2VNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1CNHgKSERBYUJnTlZCQU1URTJoMVltSnNaUzFqWVM1amFXeHBkVzB1YVc4d0hoY05NakV4TVRJeE1qTXpPREkwV2hjTgpNalF4TVRJd01qTXpPREkwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011ClkybHNhWFZ0TG1sdk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBM1RLdXhQMTMKUTZnMW5ZVnFtSnZ5bDhwUDNaelI2WFBPSjRIMVFsVTJ2U3dFSHFCbmMzVkw1NVBicVVVSVBJMDdRQ0pkbFZBKwpKUUVHRzZMblUvWEp3UmpnaDVCR01UUXp6aVl5VzRObXJDRzdsUzM5ZFVwcElNSmpzSFVoQzFmRFBTNjY4aVczCkhycWh3ZGVOUDRQNGRZRWZML1pkM1NpRmlUaUZpbW9IVitTSXQwTWhjeWlObWc3V0o5TnN2anp6bHBZZGZmVG4KUVZ6V0lsLytwamRtNlpnYlg1encvdUdISmFsbkJNanlLdmFydW82YlZ0ZGMxb0RyME9TUDQzeXNXbHQzcENpYwowS2M3clI2V0tZV01GRzVIeTNoNGlyMzFBQzFOcnZmQXordTdzSlBuaEw0R0ZTenREeVl0SHkwbVBBcm9aZFptCk1OZXJyQndjMWYvZW5RSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTQQpGMnlESktNblEwL25wb25OOUo2VmxZc0hPVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDNGZ2NC93ejdBSzdEWDVqQU8KZnc0Z1ZtT0JoUE9XdmtjaUNTU041YVgvZElDTjQxYVpHTlc4YVNGT3hWeDY5ek80RDU3NmRoZnEvUHJLRVpmeQo5ZU1uVmozdU5FNksyNlVUMUkzUlFnUjFCMlBSWFk5eHpWdlRHY04vNk5xVmVFazNKbEN3WU9ZQnM4Z3J0bjg3CjFETGVvNnkvbnlDUGVuRkUybmhjU1hTdmhwUHk4eERLUkx5b0ZQckdDSGtjUVNKL0FFZHpadllKQkU3TUVGMHMKVWxtS25jM0lrYkJtLy9lT1daWXNwclptdTQ1ZE10cG1KZ0haWE5BUHVhTVdlR0V6bmd5UnlYcXRGcjBZQVcvNQovSnZwNzJzQVRJTXdVVEZOZEpBS2JsSGtzR3JucFpKQzJNclNscmhVT25hVy9NSXd2Y1JlSFBIWWlEak1MMUZPClZMRWIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM1RLdXhQMTNRNmcxbllWcW1KdnlsOHBQM1p6UjZYUE9KNEgxUWxVMnZTd0VIcUJuCmMzVkw1NVBicVVVSVBJMDdRQ0pkbFZBK0pRRUdHNkxuVS9YSndSamdoNUJHTVRRenppWXlXNE5tckNHN2xTMzkKZFVwcElNSmpzSFVoQzFmRFBTNjY4aVczSHJxaHdkZU5QNFA0ZFlFZkwvWmQzU2lGaVRpRmltb0hWK1NJdDBNaApjeWlObWc3V0o5TnN2anp6bHBZZGZmVG5RVnpXSWwvK3BqZG02WmdiWDV6dy91R0hKYWxuQk1qeUt2YXJ1bzZiClZ0ZGMxb0RyME9TUDQzeXNXbHQzcENpYzBLYzdyUjZXS1lXTUZHNUh5M2g0aXIzMUFDMU5ydmZBeit1N3NKUG4KaEw0R0ZTenREeVl0SHkwbVBBcm9aZFptTU5lcnJCd2MxZi9lblFJREFRQUJBb0lCQVFDeWhPRUFJd0JLSGt1SApJZEh4OElwTmJ2NGVBUjU0cHZuT2NOZ2IvT0g4c3JWd2NreUxwakxvWnpCMDREM1JnTG84L0g5Q3JrdzVXU1l3Cno3eWF5bGRWL0ZuWmp0clhneVg4VGw5OTlBSzlFVXh2RFhydFdteVYvOHlzOFJzR0tJSnRzblUyVUxJRm51SkYKcTAxWDRZNTRad2xna0JrWkVFY1ZoQVJpdlVmSDZpeVJRajZBUDBjZGFHQnUwc09ucVE2MHF5R3hLQ01lSk9seQp3RHFhLyt1dlhWdFp5eGpCOEdvVjJwc201WmNMWm1sZjJXeFlDc05naWdnaEpmUmJMUTIxVnZ3ZjFTRHNYTkVTCnQ0ZlN4MW02THppeVBwZkZrdGxLYVlzS0FaeG5LbkV0NTdHRk1KTU9MSkNEMWlHdXFHbElVN0NKWnpvS3B3WnoKMnZqL1pRVVJBb0dCQVB5bHJwc3V3Nm5iczNXWUltWkhUaGZCN2xLazZBSnNsaURGS0dpM0tLUit5WStsYjlkQgpnTjFIT3pRNE1MbFNGZkl5SEo4MXJ1YUY0bHY3L2JYZjlQNDg5OW1sYTdsZkc2QjF6T245QTZ2UVYzdnNCbmRKCmxPNE5oOVgrSFplSzRrUUJtdkRzVjluMUVoUERXdVRJclE4MFd6K1VqNU9yV09BdENTZGtZalByQW9HQkFPQWkKS0lQYXZLSVcvWXg1WDRHOUYwcHRYQjhMUXdzRWpwckR6SHA4R3BoSytUM0VqNDNnYWZUU0UwY3RuOWN3ZzdINAp1STFKQm1rT2VtVE1RY3h2MHZ5dnNOdDRMYWh5SGlNQ3hjTnZBMzE3bHhVZjhBZXpYMjlRQnJubnFHVFJZbnZyCjgvT2w5ZUhKeklZVmZzaDF2TksrTmFDOUxwRVRLd21OSDJjN1RQMlhBb0dCQUl5a292M0tXNnY4SFB2eWsvdkIKNkF3N3JqTWRqL2FCZ2xWOXk4LzNYazJzTXdLZlF4SmVhYUZGSFFVbDNxSGJ1MUhYYWEyTGtmRE1TVVdSa3h3agpMMXcwam5qL3FHZEtOYlB1d0FMbUVad2M0QWFoVHJ3ckh4Z2lPaUw3VW5maEhiSmovbC91QWIzWXVwWjc0dWFICmZDZUJxdVpMQ2w1WFBhT1dEb2w2VFZ5L0FvR0JBTXkrNTN2cjZiMjRlczVFWWZiR29ld2ZrclBaT2RscXhFcWsKNnJwSmZKSDZpMHpkcnJYUWQzcHFIYW84QjNRd29WMkc5REE4c1ZwdkcyZlJINXA5M0tOd2E0TlJlWVFURzJ5bwpMN2lrUk8vd1lzZXRjVHZYcENxdlZEV25aYkVUaFgvbXYrZW5oOEpHOGtyYWdBTG5heUtwRjV4S3RhdFpjMHM2Clc2R1dEbkxwQW9HQUZmSCtMR3FINllleGZYYWZWSVc3elQrTjE2SmFSb3lTbjJWMmkwM0tDZjVDK3BHSG5tTlAKSVJ0YktVbjhOaElmY2U4cmxoQ3pUMXd1MXR0STZWTnZDMmM3Y0d0ajF2bVAwSjZjN2FvditrcFVqTW9ydGJaYwprTHRPMFNyNE51TkF3WHQxRWUrTEo5aUdtSTJVMFZVUEoxRGlBUUdZeHdYT0lhZVAySDJmT0JVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "false"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
---
# Source: cilium/templates/hubble-ca-configmap.yaml
# NOTE: the hubble-ca-cert ConfigMap is deprecated and will be removed in v1.11
# The Hubble CA certificate can be found in both the hubble-server-certs and
# hubble-relay-client-certs Secrets under the ca.crt key.
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: kube-system
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDJzCCAg+gAwIBAgIQWH6uaPJQCVIOhXoI91W+EzANBgkqhkiG9w0BAQsFADAe
    MRwwGgYDVQQDExNodWJibGUtY2EuY2lsaXVtLmlvMB4XDTIxMTEyMTIzMzgyNFoX
    DTI0MTEyMDIzMzgyNFowHjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzCC
    ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM3Vd/E2sr35JGaa4C6Y4Qa6
    X/NP5zWzGJuGzDoqvAYmRD13NmhGIRxLf0BgSCXt62UF9HGe0Xi/BvYaRFt/CYWT
    LyByT3Y8tXjewdzBQruEDUxJF0Tmu8ClRrxMNKYhJ4VGadsacihn9lBpBBn8SIDE
    oqmH4RbecKlcaa/PfKBgWVpdSy8/p5c0wQoQLx8arckMv4iEOi9Ilj0NYOpARLTP
    mr/YQ1ftn8xX28x9gmRxd/2SHhi9OU46jtMEqcAJSMD+npAH0soiuCIbKI7jp0fH
    AnGbL+iCH6mMgFYc27U/FtePKzn/+XGTWOrGRawnvLEt64d2ZzNJuTb8J0uxXB8C
    AwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggr
    BgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSAF2yDJKMnQ0/nponN
    9J6VlYsHOTANBgkqhkiG9w0BAQsFAAOCAQEAGYUBalQ+hOFbFPZRSVa7G+F/JM7a
    ltzOIfbG61aPxWwuoqKhl5+J91jtK3j8XRaltyJy2l3cJnZ106BskiKHSMwx8uel
    JMPEmLug7grLcB5w97nMzZXUprSEXpcynLs4jLFJMEJf0kE3pbJbogvQcj+ExcDp
    U1cGLC7YY+/flEhJikoNm0br1Iwn1RI3UJVTJHWM02IymnKPoxntk3AeHPCzbB/X
    EqefRjOPL/hMA31hh4PwAd6HBt6laGk+49ZJUAivTbV5pT4PzZyHrw8bcKtQE0oE
    V/DKZmtZVKXndAel92EK1Z8Vm7qS8dRdRUsFUtS0nKwWqtNMto2yiSVvTw==
    -----END CERTIFICATE-----
---
# Source: cilium/templates/hubble-relay-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: "hubble-ui"
---
# Source: cilium/templates/hubble-relay-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        startupProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: "quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        name: cilium-agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        env:
          - name: CGROUP_ROOT
            value: /run/cilium/cgroupv2
          - name: BIN_PATH
            value: /opt/cni/bin
        command:
          - sh
          - -c
          # The statically linked Go program binary is invoked to avoid any
          # dependency on utilities like sh and mount that can be missing on certain
          # distros installed on the underlying host. Copy the binary to the
          # same directory where we install cilium cni plugin so that exec permissions
          # are available.
          - 'cp /usr/bin/cilium-mount /hostbin/cilium-mount && nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT; rm /hostbin/cilium-mount'
        image: "quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb"
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /hostproc
            name: hostproc
          - mountPath: /hostbin
            name: cni-path
        securityContext:
          privileged: true
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: "quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb"
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - mountPath: /run/cilium/cgroupv2
          name: cilium-cgroup
          mountPropagation: HostToContainer
        - mountPath: /var/run/cilium
          name: cilium-run
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
        # To keep state between restarts / upgrades for bpf maps
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      # To mount cgroup2 filesystem on the host
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      # To install cilium cni plugin in the host
      - hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
        # To install cilium cni configuration in the host
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
        # To be able to load kernel modules
      - hostPath:
          path: /lib/modules
        name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
                - key: ca.crt
                  path: client-ca.crt
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
              optional: true
---
# Source: cilium/templates/cilium-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: "quay.io/cilium/operator-generic:v1.10.5@sha256:2d2f730f219d489ff0702923bf24c0002cd93eb4b47ba344375566202f56d972"
        imagePullPolicy: IfNotPresent
        name: cilium-operator
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
      - operator: Exists
      volumes:
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# Source: cilium/templates/hubble-relay-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: kube-system
spec:

  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.10.5@sha256:5d83c9d674e01c449f7fa65f176f2bde6568498acb726f5fe25cc12149c216c5"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - mountPath: /var/run/cilium
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
      restartPolicy: Always
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
        name: tls
---
# Source: cilium/templates/hubble-ui-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.7.9@sha256:e0e461c680ccd083ac24fe4f9e19e675422485f04d8720635ec41f2ba9e5562c"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.7.9@sha256:632c938ef6ff30e3a080c59b734afb1fb7493689275443faa1435f7141aabe76"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          command: ["envoy"]
          args:
            [
              "-c",
              "/etc/envoy.yaml",
              "-l",
              "info"
            ]
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
