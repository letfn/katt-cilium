---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRV1dCdkgrbXAzbmVPWlU1OGFuMENSREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1qQXdNemN4TUZvWApEVEkwTVRFeU1UQXdNemN4TUZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSy82TkJJTXcwWkpLSy9kUTkrWU9mZHIKM2ZZU1M3c3VKOW5LVU12TEs4YURNeFA5U0piYWUzeXFIa1FhTXJvdVJoZ1c1eTU5S0dha0k4QStKbXQzMklrRwoxWkl1TEZLeHhyMXFUNzhzbGdpcjRPaklOV3VaeGpMVzlXSDhJVHphR0N6b0pqSk1xdFRwQmw4UlVwaklGU1FVCjdRNnQ5ODBoNGNxR2xNLzRPWC9IQ2RVRVArR3lxdFhNdEF2K1ZTb0FyYjFRelNvZFZGZmVwWVYreFBSNXZBWEEKVjNmcUZGbkpGdEJqcGtwVnl1V0pLMi9nYlgwUEJQaFNhZ041QTRPOTZyRHIvdFFPekd4UG9HZVdzN3NSZGJrMAplalRHcDBLV1pBSkg4YVdBTjk2S1FGNzJsaHdmazd4TFZFZ2xEWm1naTJ0WWRKcTJodkhHRTF6R0hoR0hmUGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNTTnRNNitGNmgxV1hpL2lNZApnaUpReDZ6VE5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYSVhsU0x1NnBacUpLbDNWRG44YXpDOEl1UUdRCnJrYzl6OVpCNThwNnUxZlcyblZBWDhXNUpGZTdvY3dyd2t6WnV6Vnk1ZTJkNm1ab2RKWktIMiszaFhzMFNQSGcKU1pFbGpyMmNweU8zN3h6MEZkdDhmUjlMYXhFYURuL2dvVFVKRWF3U0hlZjU3bVlVcGZpdHcxSng5OVF3Y3o0QwpFQlJSZzBnRFFsb3U1Mm5hL005TWNib2dGMTNhK3FxbFR5OW9Ob001VVhHNlMxS2tiNWxIbE9maXRLdWZkYUhkCjlXaS90VVZxVXBmaXJnWGhDazY2Q0IrU2VQRWlHU3JHb3FVTUpVQUZnSEhRdkRKNUUyZFdTVTB2Y2xuUDU4aS8KNUswQmVFMTlRZnlEQkp3WCtPVENza2cvR2NsSUFjd2dZZW1OVjN6aWlYV3JpYk92V2g0MHRqUTVxdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBci9vMEVnekRSa2tvcjkxRDM1ZzU5MnZkOWhKTHV5NG4yY3BReThzcnhvTXpFLzFJCmx0cDdmS29lUkJveXVpNUdHQmJuTG4wb1pxUWp3RDRtYTNmWWlRYlZraTRzVXJIR3ZXcFB2eXlXQ0t2ZzZNZzEKYTVuR010YjFZZndoUE5vWUxPZ21Na3lxMU9rR1h4RlNtTWdWSkJUdERxMzN6U0hoeW9hVXovZzVmOGNKMVFRLwo0YktxMWN5MEMvNVZLZ0N0dlZETktoMVVWOTZsaFg3RTlIbThCY0JYZCtvVVdja1cwR09tU2xYSzVZa3JiK0J0CmZROEUrRkpxQTNrRGc3M3FzT3YrMUE3TWJFK2daNWF6dXhGMXVUUjZOTWFuUXBaa0FrZnhwWUEzM29wQVh2YVcKSEIrVHZFdFVTQ1VObWFDTGExaDBtcmFHOGNZVFhNWWVFWWQ4OXdJREFRQUJBb0lCQUJJZjlRais0NFh6dHdzVwpBUTJnZ2lmbnBqN1g5NURaMmlUbVg1ZjkzdzVkS1ArZ0VML28xTnNzTWwzVlRQQThIK0FQUzlSUDg3OU9uSmdLClRxNjI4MGg1dWJtS28rb0lnVzIwNjIzSFM5U3N6MGRxaDRZRG1wUlY2NFFpRWRKUXJEakQyRnRKNWpaem9jSmMKNkdMd0NLMWtzbDNXc1RVaGpqM3J5cHY0OXdNZjh4WlZKbUtMMVZVdDZkZG5BVDhyaWlYRlNmVCtnQTZXVngwMgozTDBuYThmUkVZaEQvVk56OXhrelRvTUxsRkJTT2xoY3pyRjZ6eVdWQVVzTldGcjFhVy9Ockh1U1RmVDlPTWlvCmZGUjZlNkNkN3FldnRjRTI4K3BGbmFuemRBWW5sS3NXOEttMlZhVG5DcmhWUWZVSzFyeW1KOUIxdTh5RUsvUVMKQjFJUVBGRUNnWUVBdzNOZTVPSDhLaU1PWWZGRGJPd2kvTysxcGx6MDJuakNXTnR4SXl4dEtnaG9LMDh3Y01NaQovUGtzMW5SU0NaVE1ZcjU4d0ZoZ3c4eGFTb1BkYUtFckZsTUYrdy9CQUxwZDM2ZGRGb0JnSEpRM0h5ck1nWXRaClF1MnN6Uko5RGJyekp3Q3lBdENxSUIwOUdoc3hKdUthMXloUk5hOHNkL1NOZ0xia3VSUFdUMDBDZ1lFQTVuNTEKNjd4WklqbG91SnN3NkhacjhGRTYrMVBhaVUzVzFKdVJBbGNaZ1dndi91YVp1SXR6RzRxRE5LRTM0OEdDTTNoTwpHQ2pMcVUwdnc5NEU2T3pTaDdYWU11WkJjeUI5M0NOUXRpWGc1ei9JTmdtbzdtSjhSVjM0K1ZycVhLdlZ6Q0FvCitZU3dhYmF5QVhaTlpUbDFFQ05KMDMyU1BhRHBEL0l3SnQxbFkxTUNnWUIyZUw5RGc4dmpDcjdVRlhjbVZmaGIKVXozTGFyc3NsbGhQbml4MUFwL2xBNVdJOHdaTXc2dTRwWjFOSE5NQlpjV0I4UzhUTkQ3clVEcEd3cWw1bTMvUApsMkdmcmd2eVVnVkc1VjdpbmN3a1pwOEc4RjFvQkx5RmVpWHRaRkNTK3dnYVV5eVQwa0hkRjN3TEVBSjZMSTlvCjdkSlQ5U3ZDUm1WamFQazVTbEgwWFFLQmdGazFkc1JmYUl3amRoR0ZGeC9SdmFNTWZXeUtudGxuaEE5VGlvTkMKWEwvR0tGVmF3UUk1RHJzSkdCRUZtTkVRc3lqaWxpOHBrdkdheXpMZXVqM0FjeGROWFRrTi95VGszWEdYUllUSwpFa3JPVjluNlVTUzZmMmlGbjNnN0pOdnJNZHRJVXpPSGxKUEZ2dzFyMFRhdFQwNklxZWt0LzZ6VW0zK3RkOCtDCi90dTdBb0dBVzlic2NOMG9GNENjdFhrWU1SdnRqTWMyT1k5ZzFKZmxwZzUrdXdJWjAwY1FOb0hlZlV1dTUwUHgKelloM0ppZWJIRXVzQzlzSlR4N1VXRVVidDFTT0swUFVubEI1ZUV0YUV2Wnd3RkRsWGVCQUNvcHZiYm5ZcGtVRwp4d2l5ZStHenJ5MVM3Mi9rM1ZWcHBJeElvYmQyaUNpVDJvQ3haMnZ4K2NhRTE3MEtNSGM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRV1dCdkgrbXAzbmVPWlU1OGFuMENSREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1qQXdNemN4TUZvWApEVEkwTVRFeU1UQXdNemN4TUZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSy82TkJJTXcwWkpLSy9kUTkrWU9mZHIKM2ZZU1M3c3VKOW5LVU12TEs4YURNeFA5U0piYWUzeXFIa1FhTXJvdVJoZ1c1eTU5S0dha0k4QStKbXQzMklrRwoxWkl1TEZLeHhyMXFUNzhzbGdpcjRPaklOV3VaeGpMVzlXSDhJVHphR0N6b0pqSk1xdFRwQmw4UlVwaklGU1FVCjdRNnQ5ODBoNGNxR2xNLzRPWC9IQ2RVRVArR3lxdFhNdEF2K1ZTb0FyYjFRelNvZFZGZmVwWVYreFBSNXZBWEEKVjNmcUZGbkpGdEJqcGtwVnl1V0pLMi9nYlgwUEJQaFNhZ041QTRPOTZyRHIvdFFPekd4UG9HZVdzN3NSZGJrMAplalRHcDBLV1pBSkg4YVdBTjk2S1FGNzJsaHdmazd4TFZFZ2xEWm1naTJ0WWRKcTJodkhHRTF6R0hoR0hmUGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNTTnRNNitGNmgxV1hpL2lNZApnaUpReDZ6VE5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYSVhsU0x1NnBacUpLbDNWRG44YXpDOEl1UUdRCnJrYzl6OVpCNThwNnUxZlcyblZBWDhXNUpGZTdvY3dyd2t6WnV6Vnk1ZTJkNm1ab2RKWktIMiszaFhzMFNQSGcKU1pFbGpyMmNweU8zN3h6MEZkdDhmUjlMYXhFYURuL2dvVFVKRWF3U0hlZjU3bVlVcGZpdHcxSng5OVF3Y3o0QwpFQlJSZzBnRFFsb3U1Mm5hL005TWNib2dGMTNhK3FxbFR5OW9Ob001VVhHNlMxS2tiNWxIbE9maXRLdWZkYUhkCjlXaS90VVZxVXBmaXJnWGhDazY2Q0IrU2VQRWlHU3JHb3FVTUpVQUZnSEhRdkRKNUUyZFdTVTB2Y2xuUDU4aS8KNUswQmVFMTlRZnlEQkp3WCtPVENza2cvR2NsSUFjd2dZZW1OVjN6aWlYV3JpYk92V2g0MHRqUTVxdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRVjZScFlFdHA0S3VMbHJrQWtacGpWekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1qQXdNemN4TVZvWApEVEkwTVRFeU1UQXdNemN4TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNaejhQMkY3NVhUREt1cngKWDBTbm9KZkdYSSszSlBoR21LYTdnVHRnWW9wWXdRcU1LWUlpWUdhS1JYd1dDbXhlVlNjY1lmaEZCMmlRM3diTgpoL2tXMEZCVkV1bnhsLzBwUHdodnVsdkNGelRrVXJvTjVIOGIxbVZ4VU9qd0pJN2hpa2c2b1hBckpNb2xWTjhpCjFtOTZTVEZtZVlNK3pEM05yd3FtQS8ydkNxQVA1MUxwd3hSRnBSbmF3dS95MkwwTlJkZkFQcUZDRnpwTENNVHUKeGJUMU1pT0VOVUJSVkltMXB4QzlGUVMxazZiQTYxdlRMRUYvbGpHcktsaXlQaWJOMVpoSVd0bWM0SzZ6bitidgpJbng2TmZtNzJDOEoySUJaTHArU01rUTlubHBSeEIyaHVBWUNMU3VLNUFxditrUWhuaXh2Tmt4LzBKTmkycTkxClNhR0pYd0lEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1NOdE02K0Y2aAoxV1hpL2lNZGdpSlF4NnpUTmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQWc4clpLSUFzTUd6QytycHFIdEJSbVVDY25IeExXbUVIWUsKbmFrdUJuRFExd1BWcUxOSGtsWTJrVS9nSkRBWStjNmc4UG1WUTFMZ1dHQSttaGdnc2FHN2p3YVBlZUl1cTRoYwpzdU1BN0dreWZ2ZFZ2SFdoTCt5cC9SbVhsTHJ6dVpTMUwwbEh3NHhaZTlxN3FqaGoxQmtTbWFka09yREVkaDV2CnZCMENkOXAvb3plQTEwNlRFK2hJSjFNK0JVVWZxbkVpSE03WlhOTTFpZ3VaWHdnRmZCcWFYbHZUWHdZcWF6K1cKZ0hTSC9jY3JQS2hCelY1MlhXNGxTbHpHUmdEcGRuOUNianB0SXRZY1dHai9NUGI0RXNKb0xuVUNBbE5DOTd4QwoxMDBiS1l4NGQydHlGeTVFbEI1QW5yQU5Kd1dYazhzVFZFa0V2TkVBVDVqSFZTSDdoNnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1p6OFAyRjc1WFRES3VyeFgwU25vSmZHWEkrM0pQaEdtS2E3Z1R0Z1lvcFl3UXFNCktZSWlZR2FLUlh3V0NteGVWU2NjWWZoRkIyaVEzd2JOaC9rVzBGQlZFdW54bC8wcFB3aHZ1bHZDRnpUa1Vyb04KNUg4YjFtVnhVT2p3Skk3aGlrZzZvWEFySk1vbFZOOGkxbTk2U1RGbWVZTSt6RDNOcndxbUEvMnZDcUFQNTFMcAp3eFJGcFJuYXd1L3kyTDBOUmRmQVBxRkNGenBMQ01UdXhiVDFNaU9FTlVCUlZJbTFweEM5RlFTMWs2YkE2MXZUCkxFRi9sakdyS2xpeVBpYk4xWmhJV3RtYzRLNnpuK2J2SW54Nk5mbTcyQzhKMklCWkxwK1NNa1E5bmxwUnhCMmgKdUFZQ0xTdUs1QXF2K2tRaG5peHZOa3gvMEpOaTJxOTFTYUdKWHdJREFRQUJBb0lCQURwa2JDSENRT05kRWRVSQpUTGFQY2JUQWNUeDVHek1TVk5OVzdZbzlKU0VBYnRGNFVFQk5RbFFESWk1Wjd6MGFCNkZqTEZlaE1jQ1B4aUVzCnNXR2txTFZ2MDZoV05WRk1yOFREVjBnalpwb09qNG9MRlFvc0o5RENwUkIrcElUQVhMSURzUkxtTjZqdXRIdEUKcU1WcS9QOFhPS04yWEt6MUhLd1JpaWNCdmd4MXFta2lTRzdXRjNPWEFMWE43OWNEYnpmZVpNYlA1UURLaDdGeAp0Y2Nsci9DSHdPTStxSSt0OHg5WHorK0NkWFJXczZTRkhwVVl0OEhRUEJHYkRsMVoyRjJFdm5sVWg4TkYzWEZ4CjFYYnZmbkV6dTRTUUg3a0ZZWHJKZjQwNXp4Yll6OUhRdzlIUE5CMGV4R0tsOStTZmlneVk5SElrT1NPdERmWDIKdE42ZlVvRUNnWUVBeGJxajkxd0d6UmRyTE1jUDBBVWYxT0NVeHpRYUxEUXEzNi9RdkY0Q0JRZEhjdmFPb2VxWAp2b3BUOC9CV1hGd2d6aTZERDFSTGVjZmNHYnVDZm1ha25zMWtCaFBMUllmM2Q1SDkvTTllZW8ySmxXNlRrd2U0CllsMXBrenFmcU1LOXhkUW50VmFKdXdXMHplWlJTdDJUWndFK2ZqSnhNR0dYbTRJdlFIUy9jejhDZ1lFQTVmUzgKbmFabUdwa1BPYis1TVVsODRENGczWFlxcGpFeTZtaTlYR0poNUoydng2T0FxZ29VSnArRXZMTVFud3dWR084cQovdnpIUlQ5SHlYSExNMWFGRmhDSUpJeU5HcnFyOWwyR1krRWpUaU9sMG9aMXY2amVwdVpmU3MrRHZMTm56dkVlCk90MFF0QWhyTWZ2ZDBVQS9LRFQwTTlrQSs3MjFXV0cyaE5tV0FlRUNnWUFKOXlFaWEySHdYampKbGZMSEVpc0wKaUpJWEJCbzVsaHQvRUpaZG1BTlVDNHpmVDJ2YTN6N3NuSDRrc2owNEJIQ20wNU5KWjM4eVVROVh3S3FRQWs1VApycGhXOGhKeG02dXVQQTVuK20rUmo2YWFnR3N4b3RiNUppb1hBSUpoZUFjbWZFM1FCdCtFTElKelNpTll1WmdmClBlSFBiRzFsK2RVeFFqdHRiVFRrOHdLQmdCRGxGVUtENmphRURsRlEyN3RhU2RsejF4aE9TVDNpbVhvTmJmUXUKcWtDUXNVeDZuOFplYlRLVlA3eFpiNXd2MkJEMzZYSElncDk4MGJwa0tPakJyNDk2Y1hZMStWd0FZUWY5d1JUdgpncGVJR1BQSnV6YjBvajhpNTlkb1BhYU1pOUR4ZUNZYy9kQXNXaXZXOUdvZVRVV1g5bVVreVdTMWdIQnJ0R3c0ClRFUWhBb0dCQUxyMXNPTGlFRzMxZER0QVJmY3B3STNnMVBKaCttYjZRZjdYSlcxeFFpU1F3MjNsdnlmazh0UGEKaXFFR1FEVWN2SThDb28zemp5b3p4aWhzbHl1S1Q1M1VuVVBrOTN4M2paandsTFluRUZQYW1xU0JhTmhLQjVHKwpjL1dNcWl5MXJPVDhycGM2MEtabEpTcVgvSm14aGl1RGNkOUdWV0lrZXcwM0pJRVFuTDVFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRV1dCdkgrbXAzbmVPWlU1OGFuMENSREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1qQXdNemN4TUZvWApEVEkwTVRFeU1UQXdNemN4TUZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSy82TkJJTXcwWkpLSy9kUTkrWU9mZHIKM2ZZU1M3c3VKOW5LVU12TEs4YURNeFA5U0piYWUzeXFIa1FhTXJvdVJoZ1c1eTU5S0dha0k4QStKbXQzMklrRwoxWkl1TEZLeHhyMXFUNzhzbGdpcjRPaklOV3VaeGpMVzlXSDhJVHphR0N6b0pqSk1xdFRwQmw4UlVwaklGU1FVCjdRNnQ5ODBoNGNxR2xNLzRPWC9IQ2RVRVArR3lxdFhNdEF2K1ZTb0FyYjFRelNvZFZGZmVwWVYreFBSNXZBWEEKVjNmcUZGbkpGdEJqcGtwVnl1V0pLMi9nYlgwUEJQaFNhZ041QTRPOTZyRHIvdFFPekd4UG9HZVdzN3NSZGJrMAplalRHcDBLV1pBSkg4YVdBTjk2S1FGNzJsaHdmazd4TFZFZ2xEWm1naTJ0WWRKcTJodkhHRTF6R0hoR0hmUGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNTTnRNNitGNmgxV1hpL2lNZApnaUpReDZ6VE5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYSVhsU0x1NnBacUpLbDNWRG44YXpDOEl1UUdRCnJrYzl6OVpCNThwNnUxZlcyblZBWDhXNUpGZTdvY3dyd2t6WnV6Vnk1ZTJkNm1ab2RKWktIMiszaFhzMFNQSGcKU1pFbGpyMmNweU8zN3h6MEZkdDhmUjlMYXhFYURuL2dvVFVKRWF3U0hlZjU3bVlVcGZpdHcxSng5OVF3Y3o0QwpFQlJSZzBnRFFsb3U1Mm5hL005TWNib2dGMTNhK3FxbFR5OW9Ob001VVhHNlMxS2tiNWxIbE9maXRLdWZkYUhkCjlXaS90VVZxVXBmaXJnWGhDazY2Q0IrU2VQRWlHU3JHb3FVTUpVQUZnSEhRdkRKNUUyZFdTVTB2Y2xuUDU4aS8KNUswQmVFMTlRZnlEQkp3WCtPVENza2cvR2NsSUFjd2dZZW1OVjN6aWlYV3JpYk92V2g0MHRqUTVxdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRRXYvZU5nc21sRzg0Vkhva0tjTnRuekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1qQXdNemN4TVZvWApEVEkwTVRFeU1UQXdNemN4TVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5nN216UFkKTXhpbGpMbm5Kdmc4REpaZ0QrajRtTzJiZjRBV3pKMU1tSDE3MlBrRzFHMkZvZDVWS1pwaFZTR3lNeGhWc2U1NwpRYlVGK1E0aXlCZG10QUlSdXovRGtwQ0EvTW80RWppSFo3U0VkK0ZkQXJFYjMxQWM4Wno1Z2xzYkUwMk9RdWtyCk92bHplZ24ya1BCdEk1azlIbzV3SDlGR1E4OFljc1lWT0xKQ2N6RTVBK1RXTDlESjdxRHIvZjd1UXNNSEZ6K0YKSXFVS3RjcVBTNnVBM2pIL2tKNjhuUDdLbUJsb294N3FYZE1Hckx5a3lzVFN0Q2sxVHMvYTdoQVBjekZ6c3NrRgpVTWFQemtzZFIrLzVvTWFSZnFJUWZ4VzJqM3daT1czRTFaQmVEZm9mT2ozL1owTXNtdTR5QUVWTVlOVmlPSi9vCjNUa0pBWjh2eDdVRXkvRUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQpramJUT3ZoZW9kVmw0djRqSFlJaVVNZXMwell3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVVHY0pLS3lnYUJLYUwranMKclVsUzVBYlFhWndjMDZ0WVFackVqMUZ4UlhoMTRCMFhCNy82b0c2R1VvVlk2c1NTUUU5OXpiWjZEQVRETklVMApKTWpsaEpaOW1PYklnNU9NTFNKMGFUVi9jZG9IUC9oNzNSSUdndUNrK2x4YisrVkdZQ1dNU0tJM3BTZEpPVWJXCkFlN1IyejlsL0JiTlVrRTZLVEJOMytJNW9US1E3K251aWVZbEU2c3hDUnQxYTJrVWxGQ3oySjkwVUtkRlk4Y0gKcnl2Zi9Ea3lVWW1FeU1jNXpjTzFSUGswWExZZHp0QWNXdDR3SFZ3Y2ppVzl3UngrMkNPaGs3RUFQenhCNWErZgpjNnltWkI0TEI1MGwreDRpblB5QmROSnJUWFNwRTgxdzdDRzRncGxDbjNFd1EyM2pYazJLSzJyUHlkSnBSNGtrClFaYUFwdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMkR1Yk05Z3pHS1dNdWVjbStEd01sbUFQNlBpWTdadC9nQmJNblV5WWZYdlkrUWJVCmJZV2gzbFVwbW1GVkliSXpHRld4N250QnRRWDVEaUxJRjJhMEFoRzdQOE9Ta0lEOHlqZ1NPSWRudElSMzRWMEMKc1J2ZlVCenhuUG1DV3hzVFRZNUM2U3M2K1hONkNmYVE4RzBqbVQwZWpuQWYwVVpEenhoeXhoVTRza0p6TVRrRAo1Tll2ME1udW9PdjkvdTVDd3djWFA0VWlwUXExeW85THE0RGVNZitRbnJ5Yy9zcVlHV2lqSHVwZDB3YXN2S1RLCnhOSzBLVFZPejlydUVBOXpNWE95eVFWUXhvL09TeDFINy9tZ3hwRitvaEIvRmJhUGZCazViY1RWa0Y0TitoODYKUGY5blF5eWE3aklBUlV4ZzFXSTRuK2pkT1FrQm55L0h0UVRMOFFJREFRQUJBb0lCQVFDZ1JtWSs0blRWUXZoeApYMTJxUjlCSXNnRjQvTE5XQTVsWkZ3MHBWdm44b1F6dFlOdWFKcUFaaldSZDh1RklMYTdqemJrcWZKL3lqdS9SClE0U3VtOGkzYys4b1QwMVc0TlQvQ3RxdW5lY0hqZHpSNWNBMkNPUFluT3VXSC9jNGtuUVhXMmhMTG1qek4xM3cKL3BybUt1OWxDVUdaOEpBVTdaRWJjeEszc2trcER1enlDcWNTWHJEVnduSUNLdFl0cFFzaFU3Q1BCM09tM0lrKwpDWGQ3Z25lRUxreTBxK3pwbkk1YkZwbWhWUHNubjgrVkxES2Ztby9UU1RpcktBWkNUTXBMbkcyVWFwWnp5RzZ6CnJWNDN2bm00N2FjbmhFeFhCZmdrdkNiNEwyeXpDenFuWFk3ZUxHUzE0dEFxUFRxTjVLUExtN1FTQ2ZYaWZhRXMKQkdHdHFYR2xBb0dCQU9ENlBkT1BqTGJ4N0ZEU29hUGdXcFRwS0Z6L2FkeFBpNUtsVXF5bnRyeGNjdEVtUkduVgo5aXU0eFBFMjh2cVhaOEZuaUdpd2o0NWlyN0R0YjFrQU9UQW1zS3RWMjNadEM3cU1yNE1wUzBxcW10TzlBOTdCCmdhd1dQOEN5K1FodStjbVU1ay9aQlFXOW5mclFRNG14U25SUk5QNnNCalgxZGVVTHZvdkU5cFZYQW9HQkFQWU0KclFkeGQ0UFJ1SXNXd09kYzdoNVU1aFJyMjU3TFZSMG4zamp6ZnJ2L3RleEQvak93WGJPS092b0JUODlrRHJzKwpjM3N4RVNvdWxvdE9Sd0JKMi9YN2N0OGovSUs3OXhETUlBYkN6eVpzbm1FTHFQektBcHRDTTZjeTJDRGVOZFcrCllsSVZNY09KWXJucHlHNUpyeFRWN1dNeWFkNzdLdXBRRFZmYm5OUDNBb0dCQUlrSkJBWE1aMnE3MnpTeng4OVoKQmZPMFBXakFEc3dxQzVzTVpscFNZZVZEN28vazNrRVZHYmd4K0l2dzYzbW1KWVhSdVc0RE5iNEY4SHcxYytCagpXWEl4N3VTK0RFcUxTMXlhK3dGS2N0a05KL2VYSnpkVTZOWllTd2JtUFBoZEdIc24zazErcENlR0F5ZFdHZjFSCjUwY0llOTR3REN4cjBoN3MwMml4VlgxTEFvR0JBTlhWVmxydHBheU9Ddy8yQ2xnSVQzbFUxMUJRSEdINDNGT20KWGw2b1h6QUxuNU5oMC80Zi9JOFlSd0VYT3NGR2QvY0s0MW5nM3NZR0R4ZXFROUpnWGlWOURld1hYbEJRQXZ3NgpLbXMxeXNuZUJCYmJCMVlLU2hHY2l6OTMxSlZjQ1BWbHJCVWlEa21ka0l0NlBaSjd2d2tna2xwdmFjczhCYVAxClJtTmduUDhwQW9HQkFKUGRDdkVmMDZpTklMenpWUkhxbUZSWXZoMXM4T1B1VGpnSmt6NTYwUTVHeWNxUU5NV3QKekZnUkY1cEZ5elBDaDZaWDA4UTNoQUZBL0ZUMUFlU3BiRlp5aE5yR2VXRGhwRDVpTUdNSmtBZG8xendHYWdnLwpQc2kwSURUOHAxVExmWDVmeTl4WHN3ZUUwY1BiWkVsOTBoMHRib2YyOTNkZTA0c1FYekhPVTlZbAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "false"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.0-rc2"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.0-rc2"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.0-rc2"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.0-rc2
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.0-rc2"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: hubble-sock-dir
            mountPath: /var/run/cilium
            readOnly: true
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: hubble-sock-dir
        hostPath:
          path: /var/run/cilium
          type: Directory
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.2@sha256:a6f80b0517a5266783d619ae14d846d4fbb692f6aaff37804fc8851bf1095a30"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.2@sha256:43c1e824751639b1df9460e5c5d5a3fd732f834bb96b3012a4164eeee457cbb6"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
