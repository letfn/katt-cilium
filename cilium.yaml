apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - watch
  - update
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: ""
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-session-affinity: "true"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  sidecar-istio-proxy-image: cilium/istio_proxy
  tunnel: vxlan
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDJzCCAg+gAwIBAgIQLDLN3RupAkPZREFiCTD0ZTANBgkqhkiG9w0BAQsFADAe
    MRwwGgYDVQQDExNodWJibGUtY2EuY2lsaXVtLmlvMB4XDTIxMTAxNTAyMjEwN1oX
    DTI0MTAxNDAyMjEwN1owHjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzCC
    ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALfIR9ieIs0RnqWSYUGHGiu6
    dY9TvlEzRP3rICLAoo5OuLvvi4IS8NVQDK7mKzw7/0Ib0ht1/QO+guAt5alIp6bn
    LSu2J/D1+YQifQ+P2moXmYVUX0iw1AW8q2OI9bBN72nK8g6ISMBRImuswMvNMpd9
    /S/rCgR5t83kHn89o0aYytXAaBVM4gMKrb2yI8Gyd+WmkESQyzYr+YOYPyQYPDDw
    faamL0ZUPudHtgTyjcMZUyYVESshDxh9JJt6b3xfNwYcqp791u6jHLRQao45+Q9j
    N2ue9krLCuzCYZPGClxJPk4DcB83WhePcQf3bEJ7XKeMsgVBwS+5rzgbSF4hVN0C
    AwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggr
    BgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBT4tbfuPm29MftARIkB
    scWDUYLPdTANBgkqhkiG9w0BAQsFAAOCAQEAJjv50XmJKcXvi7T9bD0pK7mYuoFQ
    OlBJybfy3ZKuyoLVE9JTTEBZkDDJDlno01uwIw+zoLiOlX4CucENysHlX5Z9xXUi
    8JHSQfSGJckySoA2nlxGAYs4cJAGcwEK7h9FYrFRfMxZ2UgdLlcK/WyHNWaMLV1M
    1tYm0QfCYtsRXRT5MP9X4kB6Rh1fpTMVVxw6aPZhM1/ZnI4PzX8Dw9GueeUzVtx0
    IjXoOrDkNy68JIbZWnBAOelZpJw14+u0MRorb9hb89t4ZA/oCJra22wKjbxA8+TV
    I4ANrf+FAXNzgyFF8waraa5heIYt8qUsYe/wKVgXRwMfgEnujVuuQvEG6A==
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "peer-service: unix:///var/run/cilium/hubble.sock\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRTERMTjNSdXBBa1BaUkVGaUNURDBaVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBeE5UQXlNakV3TjFvWApEVEkwTVRBeE5EQXlNakV3TjFvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGZJUjlpZUlzMFJucVdTWVVHSEdpdTYKZFk5VHZsRXpSUDNySUNMQW9vNU91THZ2aTRJUzhOVlFESzdtS3p3Ny8wSWIwaHQxL1FPK2d1QXQ1YWxJcDZibgpMU3UySi9EMStZUWlmUStQMm1vWG1ZVlVYMGl3MUFXOHEyT0k5YkJONzJuSzhnNklTTUJSSW11c3dNdk5NcGQ5Ci9TL3JDZ1I1dDgza0huODlvMGFZeXRYQWFCVk00Z01LcmIyeUk4R3lkK1dta0VTUXl6WXIrWU9ZUHlRWVBERHcKZmFhbUwwWlVQdWRIdGdUeWpjTVpVeVlWRVNzaER4aDlKSnQ2YjN4Zk53WWNxcDc5MXU2akhMUlFhbzQ1K1E5agpOMnVlOWtyTEN1ekNZWlBHQ2x4SlBrNERjQjgzV2hlUGNRZjNiRUo3WEtlTXNnVkJ3Uys1cnpnYlNGNGhWTjBDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlQ0dGJmdVBtMjlNZnRBUklrQgpzY1dEVVlMUGRUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFKanY1MFhtSktjWHZpN1Q5YkQwcEs3bVl1b0ZRCk9sQkp5YmZ5M1pLdXlvTFZFOUpUVEVCWmtEREpEbG5vMDF1d0l3K3pvTGlPbFg0Q3VjRU55c0hsWDVaOXhYVWkKOEpIU1FmU0dKY2t5U29BMm5seEdBWXM0Y0pBR2N3RUs3aDlGWXJGUmZNeFoyVWdkTGxjSy9XeUhOV2FNTFYxTQoxdFltMFFmQ1l0c1JYUlQ1TVA5WDRrQjZSaDFmcFRNVlZ4dzZhUFpoTTEvWm5JNFB6WDhEdzlHdWVlVXpWdHgwCklqWG9PckRrTnk2OEpJYlpXbkJBT2VsWnBKdzE0K3UwTVJvcmI5aGI4OXQ0WkEvb0NKcmEyMndLamJ4QTgrVFYKSTRBTnJmK0ZBWE56Z3lGRjh3YXJhYTVoZUlZdDhxVXNZZS93S1ZnWFJ3TWZnRW51alZ1dVF2RUc2QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTEx2L084M2VhME5wcm0rL3NlNGM4REFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBeE5UQXlNakV3T0ZvWApEVEkwTVRBeE5EQXlNakV3T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJ5cFd6NlE2TEcwSWFYNUwKcnFjaHZKcWRuNVJQeGJyRXBtNnl4UjlrVjVSS2pESVlJSnpBL3Q5M1VURVh0c09jMkZiZi9PN2JWcXFrWEZCOApzYjVyelhDaEpkVHhaZ3F6bXdWQUFSSlNJREhiNWU3YnJGRHl5aTJndW9RMHNDUzBoZCtvVE5Ra3cwUkVOTTRCCjZzZlBJRWRweDlzdU51bndVSXRURldJOU8wcTU3R2VVSHlGVGtJcFlKS28yNGJGd08rUW40MllYdWprSjhGeFEKcVAyZTkycFh6L3laRi85YzFpZWtTL05tOE8rbkRpYkt4czdFRzZxb3dFdEpnYlA3YjEyK05qYVc5TzN3czZaUQpuSHoySnVBZzdLUWs4M1NLeVJTemhHUnZlcGEzc3h1WUs4cDhhS0gvSUtmN0pWL0NQYVIraFQ4OHNYV0dYWWpPCjdKampjUUlEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDR0YmZ1UG0yOQpNZnRBUklrQnNjV0RVWUxQZFRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEh4SjVTdm90Tk45YkNCK0NFMWFtdDZnVW05M3o3RmNibzMKWlhlcDhVVzUzK2pMeWR0OS9aQ0ZMZzJpaWlaMHJnZlFoL2lTWmZEa2syVnFEWFN6RWtDNUZWYWVwSXovU0dWNQpiVEtibGEvbDFFa2h4emlZTDdKT3QrbnM1M3QxM1cxUStVZXRFaEhWUHdrWDBtbVg5VjRJVFErSWhObkU5YS9LClBVb2NuYXFTdUZPa0RKU2NWemNJN3F0TklGRm1iMkJLdjMwZDJ1NHVtQmNmSUxvREQ0dG9BY3NwYnBMNG4ra1UKemNQNGVLOVNuaW91T29WclJWZXR3M05oMVcwQWd2ZE9NU2FSazJWVk9hSnVXWG5ZUEVlTGxVaXozeUd4WUZudQp6UGFLU2gzNE1SOTRHc2tKZGt4WFZNeGhBZ2ZTMnJXNFpjSGRKdFRHL3Qvei9IOTcrRXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMnlwV3o2UTZMRzBJYVg1THJxY2h2SnFkbjVSUHhickVwbTZ5eFI5a1Y1UktqRElZCklKekEvdDkzVVRFWHRzT2MyRmJmL083YlZxcWtYRkI4c2I1cnpYQ2hKZFR4Wmdxem13VkFBUkpTSURIYjVlN2IKckZEeXlpMmd1b1Ewc0NTMGhkK29UTlFrdzBSRU5NNEI2c2ZQSUVkcHg5c3VOdW53VUl0VEZXSTlPMHE1N0dlVQpIeUZUa0lwWUpLbzI0YkZ3TytRbjQyWVh1amtKOEZ4UXFQMmU5MnBYei95WkYvOWMxaWVrUy9ObThPK25EaWJLCnhzN0VHNnFvd0V0SmdiUDdiMTIrTmphVzlPM3dzNlpRbkh6Mkp1QWc3S1FrODNTS3lSU3poR1J2ZXBhM3N4dVkKSzhwOGFLSC9JS2Y3SlYvQ1BhUitoVDg4c1hXR1hZak83SmpqY1FJREFRQUJBb0lCQVFDUjJnVlh2ZlV3NTRhMwpuZU1ENGhuamlBbnB6eXVmYlFHOXVPR2pxWlovYWlLS1ZqUVVULzFvSUpNcEowQ2UwbU1vM2ZmR1BiY2VZQVZ0Cm9lcTU1djJiQko5WnEvTFNjOEMvSTZsS2pVUzJSRGdSTnZwZUhLald2N0s5TFlwYXhyS1VmUmxsdDdDWGVuRGgKcTA4L1RhV2IxNnFmNUU5SElEeGJmYnpXK0QvRG1tV3pPd2JtNmFtVDl1NHZjY1lTQStUYm5HOE1UeExOQVBoVApEbHFMa05MZUpuVUZmUjNMMHYzdjg1clFTMm56QlpLY0dXVGZKaTR3TWJHUERqcmlYaW9mc3Rmd2hsUm4velJMCjEzWURLTXQwOGJHMDVKRkhWdmw1Z2pZUUlGY2Jha2drbm9wRjRWZ3NLVmdJelEraXh0NFdjYklKSjdqYk85Z3EKM1YxeEtKOGhBb0dCQVBmM2dZR2lVMSt1WDlHMEFwWDE0OHRudG9LTVQzUWN3dVBZQVFRQXBHY044UkZtR093Nwo2WVlQV2VNSk9ZbTdBU0hhblhRM05xVnpXZGxiSWpBYUpXbmRxRFltN0pmaWFsNCszOTVjL0ZmU1JqSEJPSnEwCkNGVS9HRVhnY2dwS3RkMzc4UEZJMnpoa3FVQjdrcDZnSmxXMjE5d1I0WWMzL0ZrSFkvMHF5QmsxQW9HQkFPSkQKK0lDUldGVlBmZCtvSzZEeUlZbzA5aTl3QXFiNDJvdzBMOGkxTWUrZGlTek1kc0FBUmVtNjV4aC9FS0RTSm1uYwp2MWhkbHhRdkRJTVZ3YjhSRkNYV2hQM01JR3YvOU5IanM2UUU3aGlWNll2MCtLdGpjd05mdWVwbmZLRnZUMEw2CkdiSHVRKzM0RHg1bTRjYXhLV2dJMEYxb0V2L2xlS1ArWWhqUzlHVE5Bb0dCQU04ckNCWW9hb1BNQ2Q0SUNRa0UKOEpabVJnTjMrb0hGN2NXeUY5Y2lPamluV3pyd0UrNTZkN1k3YVJ2WC95eGxBcU1vSk5pTnNLZzJZV0RKVlJ6ZgpHMWNCaTZJQ2p6U3VRN1FOejdmVjlEWGpSaVlYaXBVbHlMaUFDR1dKQ1g0endSSi9oV1B4UE1ZMnczbE9STWNtCmdpQ21yRjMreW0vUWhKSlZMR0s5dFlQcEFvR0JBSnZoTSt4dk5hbmdUOW1yNUJMSGZTL1grTnNKa2VveWUyNG4KN2R1YWFVS3BCMzRqaHBRVUhCWkFPMEYzR0orUzUvLzZvcUJnS2RzdjVyRFFabUFaaGdYaldrLzNOMGJ3V1Z2WQpRVVI0V1FmN0Q2RHFMZjcxVHFFK2E3ai9mcTlCSGh3SWJYZFZyTnJmRUp0alNadzNKVTJVOU9mRThZSDJOenpUCjNnVTRJRUxwQW9HQVJXSVJJVll4L2VQb2kxTnBiMklUZTZ0Z0hYMFNOU0crMFFWRnh3QWFScFVRcFZxREEwNTUKUGV4a3pybE5pZlhnWXZvSHY5bHZLUURUSytIMGp3Q3dackxlQ3lsMnB1L3Q0SWdLamUyN3YwWDF0cDRXL0liUgo4angyN0hHaG1Nd0t2cGg1TjVTcDAxTlIrN1p6cVMrN3dIQ0RXY3NsVi82WVRmV2h1WHlPN04wPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRTERMTjNSdXBBa1BaUkVGaUNURDBaVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBeE5UQXlNakV3TjFvWApEVEkwTVRBeE5EQXlNakV3TjFvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGZJUjlpZUlzMFJucVdTWVVHSEdpdTYKZFk5VHZsRXpSUDNySUNMQW9vNU91THZ2aTRJUzhOVlFESzdtS3p3Ny8wSWIwaHQxL1FPK2d1QXQ1YWxJcDZibgpMU3UySi9EMStZUWlmUStQMm1vWG1ZVlVYMGl3MUFXOHEyT0k5YkJONzJuSzhnNklTTUJSSW11c3dNdk5NcGQ5Ci9TL3JDZ1I1dDgza0huODlvMGFZeXRYQWFCVk00Z01LcmIyeUk4R3lkK1dta0VTUXl6WXIrWU9ZUHlRWVBERHcKZmFhbUwwWlVQdWRIdGdUeWpjTVpVeVlWRVNzaER4aDlKSnQ2YjN4Zk53WWNxcDc5MXU2akhMUlFhbzQ1K1E5agpOMnVlOWtyTEN1ekNZWlBHQ2x4SlBrNERjQjgzV2hlUGNRZjNiRUo3WEtlTXNnVkJ3Uys1cnpnYlNGNGhWTjBDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlQ0dGJmdVBtMjlNZnRBUklrQgpzY1dEVVlMUGRUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFKanY1MFhtSktjWHZpN1Q5YkQwcEs3bVl1b0ZRCk9sQkp5YmZ5M1pLdXlvTFZFOUpUVEVCWmtEREpEbG5vMDF1d0l3K3pvTGlPbFg0Q3VjRU55c0hsWDVaOXhYVWkKOEpIU1FmU0dKY2t5U29BMm5seEdBWXM0Y0pBR2N3RUs3aDlGWXJGUmZNeFoyVWdkTGxjSy9XeUhOV2FNTFYxTQoxdFltMFFmQ1l0c1JYUlQ1TVA5WDRrQjZSaDFmcFRNVlZ4dzZhUFpoTTEvWm5JNFB6WDhEdzlHdWVlVXpWdHgwCklqWG9PckRrTnk2OEpJYlpXbkJBT2VsWnBKdzE0K3UwTVJvcmI5aGI4OXQ0WkEvb0NKcmEyMndLamJ4QTgrVFYKSTRBTnJmK0ZBWE56Z3lGRjh3YXJhYTVoZUlZdDhxVXNZZS93S1ZnWFJ3TWZnRW51alZ1dVF2RUc2QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRV0RPanJHLy8vTjVKZUFRWDVMaFVxREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRBeE5UQXlNakV3TjFvWApEVEkwTVRBeE5EQXlNakV3TjFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUt1V09oTFQKY3FGTVM3RUYrUWJrNWw1Z2FaTDJ5ZEVVb2I2RnJIZVpsbVk2dHZadkhrbzJWVHI5Tkd0NURXODgyMVBjeUw2SQo3N1ErNGhyaTZnbGsrNjd2V2t0NEJFK1psY1lqaTBuMm5EYUNwZWpaU1kySXpncnJlMER4M0IyUlNGSHdIbzNHClQ3cER5S1ltNmsramh3dnhXRU55RUNWT0tSbjdsc3JUR1dLeXY1Y05EaHBxeHN2R3o2eVY4TEp1S2o1R24wNHEKUXlyQTN2eHFiNlFaNlFjMVp0SFBZbG0ybWVYUFF2K0F6OGVpRUowR04yRUFwWWxHazY2bGtQZnY5aGJqTFBJego3Y21rU0twZ3dDYmZaZklkNGlyVlJ1blhSVklFTVNNVHBRdE5JaUt2c0FaY0x0TWRyVU5mUWNLSEhJN1BlRVVaClJPYTFYZUY3S1hCWU1QTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQorTFczN2o1dHZUSDdRRVNKQWJIRmcxR0N6M1V3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXRmaCthdVRCdFhkS0ZNai8KWVF0RW5SaThCc1pVeEhXQW82T0w2Ui9jeW0yYk5yR0ZpTDJZWXJNSzhEZ2RqNU1ReFRrZnIyM2E0Z1k5OWdyVwpzbVhjOEk0cVlReGhEYUxhTVVucmJJSVp6disySDVqQjhUNWtqKzkzOENGVG42ektxUXpUMEZBWlFGQ05BdlJTCllEUVlhTEFLSU93eWNRSGdESGFBSi9yNi9Gd09nNnp0c01xM1NEU1VReHIzR1VIWmMwYUYza0tCME1aWGZiRGQKckFtZnFUaGdDL1U0emdEZkllbyt2a1V1RW1DdUVsUmEzQmordGNkWGYzSkdmK0M5bndjYlpQc1ViNTlXdlpubQo1UmFNOVhkNlNxNktkeVhWUDFvREN1UHZPbmZtQkdBcjdZc2ZZa2pEek4vZ3N2N3lNdXV5VENhRjVyR1Jvc3FCCnRDZWx2UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcTVZNkV0TnlvVXhMc1FYNUJ1VG1YbUJwa3ZiSjBSU2h2b1dzZDVtV1pqcTI5bThlClNqWlZPdjAwYTNrTmJ6emJVOXpJdm9qdnREN2lHdUxxQ1dUN3J1OWFTM2dFVDVtVnhpT0xTZmFjTm9LbDZObEoKallqT0N1dDdRUEhjSFpGSVVmQWVqY1pQdWtQSXBpYnFUNk9IQy9GWVEzSVFKVTRwR2Z1V3l0TVpZcksvbHcwTwpHbXJHeThiUHJKWHdzbTRxUGthZlRpcERLc0RlL0dwdnBCbnBCelZtMGM5aVdiYVo1YzlDLzREUHg2SVFuUVkzCllRQ2xpVWFUcnFXUTkrLzJGdU1zOGpQdHlhUklxbURBSnQ5bDhoM2lLdFZHNmRkRlVnUXhJeE9sQzAwaUlxK3cKQmx3dTB4MnRRMTlCd29jY2pzOTRSUmxFNXJWZDRYc3BjRmd3OHdJREFRQUJBb0lCQURIenR3NVova29VMHdoRApDOTlFN2dmVm00YU1UKzZOU2hVVUIwUitNdm1wNkMvUDQ0cUpUTUN5aS9zcHI0Nk5zZkExR3ovVXo2dXlqdEp5Cjh0MHZSOUlDbmsvUUxia2FwaTZibEdaQTQvTStqNXc4L1p1MWt2NDgxWkh2bHp3SVdueDRJZnoyR2FuSkovV3UKNkpHc3NwajRkdENUdVQyVEJvWW81eG8rNEdvSjAyTTdzdlorRzFyN2FSanE0dWhUbnlVbGh3NHNHdXIwVVg3aQozdlRRYWJsVnY4UW5HY3NrTTRacFdxTWhhbWtWclk0aUFMdE9IeWk5eWg5RWhraVRVOVdoUXVhK3V1cmhvcnI4CjdXcTZ3Zm9lUFM2a2xIRWpNVmhYejl0OVVvQjFKTzVmRUZiN2VlSmZCNVp4Q1J0WUpHdEFIdldCUmVLQllLTUMKc3FZKzNpRUNnWUVBeGt4WU1aQnlaaHY4Y2pNai9TVnZ1ZkFKZnJXUHUyeFhudC9EQ01uQ25DL3R0U0tocVhQagpRRUV0cGNWU0JqZ2pBd094Vmt5R0tRNzIzTmN5RGdzRG5uOXdFRGNlOWJ4dlRaeTJQUnUrNDdRNXVPNmdzeVpxClVWcFB2UzUwSHQrTGJTOWZ0Qk96WDVXcitzUWF4bHppcmc5YVQ4Sys2VDgzSC9nQThuT0NDWEVDZ1lFQTNZUVgKK2hHMFo1aUFDdGUwdjN5SlZadHNRdjE5bVoyWjZUM2lseGd0MjhXUDVQZ0RRVjR2Slg0d3p5enp0dXFXMVo4OQp5ZkdEYmdQZlVIbkpINlVuOXp6L2s3aDRhZHFkTStJYVRlbkgrejc1cHdyOTRuMXQ2YUR0NUd1WTRlS2JhQzRFCkN2TFBPZ3hxa3FuZjF5Z3I3YjkzbVBUSEUvY20wb1grSGdTSURxTUNnWUFGb2ttbkx0bHhPVDVVNkVzUGVDN1MKYzVWeGVpc1pRaHpETU14VHhaZTM1RXkycHNNOUUwUFRvWVp3ZlVpMVVJYitJTzY2NnZXczJQWCtsRWFoeTRKUQowSUlZazloWFZ3RTZqVWRJT1MrVlBKdWZPM2hwWHFBS3E2dzBUY3VTelBzaklRTnhGRlkyVXdSTjNhQjlIa3A2CmM0azNWdXNocVdBaGttUkVmeStrb1FLQmdRRFRYb01lZkJ4ZnFiV3NJdTMydGRlNTF5ZHp1THhMZzRYa2VNZXAKRTBwVzVlb0xPdGlvWEQyeWtmbnpCbHE3bEpjKzJjYzAxZjVxVU1tYTJjcWZKcEcvS2ZaWnQzRTIySUtlaWtZOQpTREVwdllxczZTRWZLRDVqNnNwMDVuS29QL200YkFneGhrVlVoNXA5dmhpNERqMzBpM21NZXkwbkVQTjdlSjNsCmVMOTI3d0tCZ0F5VUpVMldNRExzd1hnYTlRWW9IMHFBWUxTQ0VOalVOVWR2YUJsUXpJa0FOcFFuSHl5ckhaWVQKSWFtTFc4TkFpRzl0V0tubVY5SjYwTUQ5cC9mckhMQzdoZXVna3I2YTNlZGJNcWptS0RscjM0RU44Q3J5NDNnSwpyQmorNHdVeUVER09wSEhnKzI4bExwSnlQZWFHVE9BUlZlWHAxRFkyaXFoVHdPajUzSXErCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.10.5@sha256:2d2f730f219d489ff0702923bf24c0002cd93eb4b47ba344375566202f56d972
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.10.5@sha256:5d83c9d674e01c449f7fa65f176f2bde6568498acb726f5fe25cc12149c216c5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        volumeMounts:
        - mountPath: /var/run/cilium
          name: hubble-sock-dir
          readOnly: true
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - name: tls
        projected:
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations: null
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.7.9@sha256:e0e461c680ccd083ac24fe4f9e19e675422485f04d8720635ec41f2ba9e5562c
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8080
          name: http
        resources: {}
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.7.9@sha256:632c938ef6ff30e3a080c59b734afb1fb7493689275443faa1435f7141aabe76
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        resources: {}
      - args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        command:
        - envoy
        image: docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935
        imagePullPolicy: IfNotPresent
        name: proxy
        ports:
        - containerPort: 8081
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /etc/envoy.yaml
          name: hubble-ui-envoy-yaml
          subPath: envoy.yaml
      securityContext:
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          name: hubble-ui-envoy
        name: hubble-ui-envoy-yaml
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -c
        - cp /usr/bin/cilium-mount /hostbin/cilium-mount && nsenter --cgroup=/hostproc/1/ns/cgroup
          --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT; rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
