apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - watch
  - update
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: ""
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "false"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-session-affinity: "true"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  sidecar-istio-proxy-image: cilium/istio_proxy
  tunnel: vxlan
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "peer-service: unix:///var/run/cilium/hubble.sock\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU1iaW5YM21KblJDNlhjaDFQT3R0QnN3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRFeE1qRXlNek01TXpCYQpGdzB5TkRFeE1qQXlNek01TXpCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURqdzNwOW1TOUp4d2JlQzJ3Wmp1Sm0KWFpIb3VpaWVON3pvOVYybDRCd0dYWDJWVUppSU9KVjBralFtVUJDaUNCOVpJMVg0NDhhdldoWmQ1K1NSOGR2SwpGTmVvKzJOQjFiSkY1M3pNNWU1My9oSDFuY2NFMzUrZEU1bkwvaDhUWmVKTURJYXQwZ3BXZjJCQ2I2cThWb3ZICjM2Y1dSRkZLUC9UNTZWQ0RmSnFMMlZhQXFUTERXV3lYRkRSRFZkRllycWNWNWxPdW03TGlRV2s0ZVV4V0VxbEIKZGhNM29qYjBhelJmL3Nya2FWcm9jajRzWlE3MVIxUVYwRW1rQTdyMHVZemVmc2U4Qld1a3MrOXR0WExMSUNnUgpGNGdYREFNVzlicENmMWRIWXY0UmFLSGlsQXUvQ1J5TTlkK0JRVTUwWUNzNVBRbEgrMVJzZUpVbG5leDJKbWVwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZ3VLUE1pZ0tFOEFLajlCTApiSFh4eEhUNjBSUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRFpTb21KR0V3czNuajdNUFpCWVdsb1hXQXlPCldlQ2lGMGwwbm9YbndlTG9ERnVRUWpSc09pNUJRck5LaUtmR0ZGQ1A4d3lDcFZhbG54Z2hnNzQzN2RJTmVmQkwKcUhNYVM0dU5JYnVXUXdPeEZHNE0yQVhMcGk5MlZxc0JEMElCOUFRM0RKdDVyZXRhQTkwOGx4d2ZEaGpxcUxzSgo4VFRVTW5DNmluRHNrU08wcGRxRU42bnRrSTVYUXR4cTh6cnVXMkM5Y2dSbmE2Q25zWmljR20wc2JrZkpIYmJ0CkdFdGpUam04RDdaYUhHMTRJaTVxSTVPU1ZIVEluNjQxRk56TDZQNHRBVGVvMkVMYXd5eG80ZFhmZVNGUTNNMGUKeWllbE1oZjNWUkhUaTNueXVneEIzekxpQXpvU1ZVZ0NTZHBxbGg1bFpoYTJGbURORXBHcjlleFFyT0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNDhONmZaa3ZTY2NHM2d0c0dZN2labDJSNkxvb25qZTg2UFZkcGVBY0JsMTlsVkNZCmlEaVZkSkkwSmxBUW9nZ2ZXU05WK09QR3Ixb1dYZWZra2ZIYnloVFhxUHRqUWRXeVJlZDh6T1h1ZC80UjlaM0gKQk4rZm5ST1p5LzRmRTJYaVRBeUdyZElLVm45Z1FtK3F2RmFMeDkrbkZrUlJTai8wK2VsUWczeWFpOWxXZ0treQp3MWxzbHhRMFExWFJXSzZuRmVaVHJwdXk0a0ZwT0hsTVZoS3BRWFlUTjZJMjlHczBYLzdLNUdsYTZISStMR1VPCjlVZFVGZEJKcEFPNjlMbU0zbjdIdkFWcnBMUHZiYlZ5eXlBb0VSZUlGd3dERnZXNlFuOVhSMkwrRVdpaDRwUUwKdndrY2pQWGZnVUZPZEdBck9UMEpSL3RVYkhpVkpaM3NkaVpucVFJREFRQUJBb0lCQVFEZVpPa2Q2bzE2QkpSNApDNzhwMVpMTFVXSS9WRWFFOXZmR29JOG9nSVBjMHp6a3B5WEpIVGNSOUJCbnVKWUZJTms3T0gyaDRRY0lBWGNGCmlvQnM0VFF6UmRhdWNZaWhwLy9Dc2gzeUZER2RpTUFRakZiZ00xcXZEWXlHMjBPTXRWY1oyc0ZHeUdpL3ZQQkkKN3JCUDVsSG1nRU91UWxiOW9TV2JRRzRWZFgyU1BuWGZKQzcxcHZ0QjRTZlFXQVJ5UFBmdlYya3BmT3FBSHljWQpNYTJCcndHQ2l1elBMQUtuY3BWa3AyS2N6cThrN1JuLzkvTDRBdzVMRXlTQ0JCMCtvVlhGRjU3akYySDdqRXJHClZ0bGJwbGlvODFJTkdmeXJha0E2NWdsMG1CanlhWlg3KzNWSzlpUEVTMFMvVE4ybnRVUGJaN2VZMUpKaDIwajQKdWYxSjdCdUJBb0dCQVBMRGZQZ2FjTXFqaFBXOUsxbGtIRi9ZUlV3YWczaU5RMHlLSGdkdFdFbHp1bENZOG9NWAo5MmJObnF2UEFMNjlsb3dmRzgrZDBVRkdyYWNnd0dSdDZjVm5TZXFUcHNPTXFWc0c2eHlsdWM2Qm9SWUJFNlp1CjlGNzBRQ3NzVGlMQWludVNLc21CcFFKTjBDRExCMlJYMXRzclZyN3hDRlZYYlpGdWtVY0h1L290QW9HQkFQQXUKbm1VZksvY2tnZzFEa1BWT1ZrTVlVS0l2ckh5SE0wWVl6SG45Z3pmejFSd29uc3dUQjd6MitoaDVXaGl1TjdZWQptNVQ4Q0tCbS9SQlVjRTU3alVvTVd3ZGNNTzlDVTFUYzhWR1BQUHZDYmR0SUFoMjIvTXdweE9aTFpydVhBcW9sCjk5VGJRTVp6VVZ5OHY2T3ZNdk9md204VCt1dXBmS1kvVDRLdytuenRBb0dCQU9nQXUyWEFueHFKdTMrK0ViZVUKWFNtYjNsNGsySkJWTUlQdFcxVnR3bm93QjFjUFZIVEVhc1Bzcmo4enpWcDhoV3ZVTHhmemt3LzNJKzRjOXNFRAo2ZTJtRUpZR0ZkRzhrLzFTVjA5QmNwbFFlVW8yTFRsWndHRWV2RlNHT3dZclRDMWNPMWZvZG5JRk8ycWJuYXpmCjVZMy9sUjlWNnNqa2pPbjM2UThnN1J6aEFvR0JBSjVUL1BKb0pCRmRMYVlVdmtBWERlSlk2djZmTXJNOFpONTIKaG9SOFM3M2NyTVZOT2JFSmNuWnMwTnpGVWxFbXQyOEF0YjcyamJFL2N0OEs2cVd4NktmQmtWZyt1N3RkRzVXNwp1QkN0dmVPd2ZiNnByMHRyVHlZKytwOWRZVEdVRUp1ZFA4dy9aR250cHRyZFNlOWJGTmxvblVHZ0NDN0ZvWGZ1CkVEbjA5SXJaQW9HQUpXUm9xenRGaW5reUpUZW9RSWxBMlAyVGVuVldwWE9zQ21YMEdMb0w2VWh0VTBNeVQ1eGQKa0hrMzNlNDRUMkpCS2x4S2prb2ZTL2NhWTgzTC9lRmJwbnlBWUdER2J6NXRhQjFCYUJQWlpsaTF4WGxkSGRqQgpOZjY0b29uZFlQcWRXRkUwNlJQeDFTcE1FV3dMVWMxbXZaSEkzTnl0WVZNR3JQQzdwWmorVnljPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU1iaW5YM21KblJDNlhjaDFQT3R0QnN3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRFeE1qRXlNek01TXpCYQpGdzB5TkRFeE1qQXlNek01TXpCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURqdzNwOW1TOUp4d2JlQzJ3Wmp1Sm0KWFpIb3VpaWVON3pvOVYybDRCd0dYWDJWVUppSU9KVjBralFtVUJDaUNCOVpJMVg0NDhhdldoWmQ1K1NSOGR2SwpGTmVvKzJOQjFiSkY1M3pNNWU1My9oSDFuY2NFMzUrZEU1bkwvaDhUWmVKTURJYXQwZ3BXZjJCQ2I2cThWb3ZICjM2Y1dSRkZLUC9UNTZWQ0RmSnFMMlZhQXFUTERXV3lYRkRSRFZkRllycWNWNWxPdW03TGlRV2s0ZVV4V0VxbEIKZGhNM29qYjBhelJmL3Nya2FWcm9jajRzWlE3MVIxUVYwRW1rQTdyMHVZemVmc2U4Qld1a3MrOXR0WExMSUNnUgpGNGdYREFNVzlicENmMWRIWXY0UmFLSGlsQXUvQ1J5TTlkK0JRVTUwWUNzNVBRbEgrMVJzZUpVbG5leDJKbWVwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZ3VLUE1pZ0tFOEFLajlCTApiSFh4eEhUNjBSUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRFpTb21KR0V3czNuajdNUFpCWVdsb1hXQXlPCldlQ2lGMGwwbm9YbndlTG9ERnVRUWpSc09pNUJRck5LaUtmR0ZGQ1A4d3lDcFZhbG54Z2hnNzQzN2RJTmVmQkwKcUhNYVM0dU5JYnVXUXdPeEZHNE0yQVhMcGk5MlZxc0JEMElCOUFRM0RKdDVyZXRhQTkwOGx4d2ZEaGpxcUxzSgo4VFRVTW5DNmluRHNrU08wcGRxRU42bnRrSTVYUXR4cTh6cnVXMkM5Y2dSbmE2Q25zWmljR20wc2JrZkpIYmJ0CkdFdGpUam04RDdaYUhHMTRJaTVxSTVPU1ZIVEluNjQxRk56TDZQNHRBVGVvMkVMYXd5eG80ZFhmZVNGUTNNMGUKeWllbE1oZjNWUkhUaTNueXVneEIzekxpQXpvU1ZVZ0NTZHBxbGg1bFpoYTJGbURORXBHcjlleFFyT0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRUkxySGx5Qk9BYU1KdkFVMm9POEZnREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TVRFeU1USXpNemt6TVZvWApEVEkwTVRFeU1ESXpNemt6TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW50a0l2c0pRNHdycHpkSkMKRWdRaFpjSms4MFdIYW1JbEVFU0Y3WnpjUkhmdUtqUDFTcjFmMllqcGxHR0Vsd3hWRlFiMHR4ZDZhSjNVRW5kWgpEN0FXTGlpYWN6VVE1eitWQTFkK2lMMG53OGlIdDNiSVRJOHlRWFgzdHRRRWFLVVlPM0lBLzUyeE5MWHc1MDl3CmZ4bGRCNWlnaUdwR0ZaQUl3K2pQM29FdHVacm1sS2t6ZEpDVHBEWEpRMGtaRkZzaGsxODZUQm9ucnBSTk5icUgKWVRnemYvdUNnWjRaYVR2bzFnSHpQWExDNUZZTE1FaHUvOUQ3NVBUL2RBUGhva1k2b0hOdGh0NXh4NWorU1huNgo0cTMxeXpubTI2MjVmcXBlamh2aXo2Y2FsOW9LaDVVNi9tYTNvZy9XbVFPQVc0VlMyRDVjU3kzUTZpRSttazIyCmVWcFgwd0lEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0M0bzh5S0FvVAp3QXFQMEV0c2RmSEVkUHJSRkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTHhLUUdqYy9mU29LT0pRaGdRditmaU1aYmR0V0VVcExQTGUKTk4zb0VCTXVqc0N5dE0wVkJTY0dlNGVFS0NERlVjd2FLUDZPV0ZNVVJDWXhnMzF0UWtTUDQrNUZ2YzZ6NjFXawordC9aY1BpOHR5UUIwK3NFUjVOb1pTWEY1a0NJbWlJQUs2M1BpV0c1ZFAzYW5icEltWE5qVjZSRTE2NTc0TnlpCjdGQVNleUlpRjFzbFZDRTlxT2UvQUg3N3NMWG5BQmo1dzlVSDMrKzYyNS9maS96dXBobEdQSXpJcW9OSjhxSFYKYVpod0pRRzFZckRxbEhlTWM3RVU1dE5xeUVBSTdCSWtjbitZckdIVVBPNEROZHVIUnNINFBaYkZDQUJoR09Mcwp1aUlHVytoUWN1cG0wVTZrMjdmdlhiTWU0L3NwMy9oSU8xUWVCaDlCd045ZnZaZW4zcnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbnRrSXZzSlE0d3JwemRKQ0VnUWhaY0prODBXSGFtSWxFRVNGN1p6Y1JIZnVLalAxClNyMWYyWWpwbEdHRWx3eFZGUWIwdHhkNmFKM1VFbmRaRDdBV0xpaWFjelVRNXorVkExZCtpTDBudzhpSHQzYkkKVEk4eVFYWDN0dFFFYUtVWU8zSUEvNTJ4TkxYdzUwOXdmeGxkQjVpZ2lHcEdGWkFJdytqUDNvRXR1WnJtbEtregpkSkNUcERYSlEwa1pGRnNoazE4NlRCb25ycFJOTmJxSFlUZ3pmL3VDZ1o0WmFUdm8xZ0h6UFhMQzVGWUxNRWh1Ci85RDc1UFQvZEFQaG9rWTZvSE50aHQ1eHg1aitTWG42NHEzMXl6bm0yNjI1ZnFwZWpodml6NmNhbDlvS2g1VTYKL21hM29nL1dtUU9BVzRWUzJENWNTeTNRNmlFK21rMjJlVnBYMHdJREFRQUJBb0lCQUV6SkhURVpQWUNEQmdJNApZVGZVUjFDcFo2TXhPUVJ6N1Bhd0tRMXpoZ2FTOHMzeno5OFJMQVE3NnEyUGRraU43Wkw4aWM3M3luUkgxdndXCk5UY2dKNWlvaUFDbzVrTGl1V1drSmNaenFZVTZxbUJGU3cyM0t0UDU4b1N1ZUhNZFcxbGhBcHFOMzl0YkY5aTQKemVpaW1oWFI4Y2YvbDJGVS91ZTA0c2JzS3U1TTc1R1BuTFloL1JUNHFVb3g4K2ZxenU1ZHZWQ3N0M3dSQVFGNQpxZzNLU2trT3JJUFlIVmdKc003MUl5YU5yVjJnQ3QwYXkwcXN1dERFbGZlVnhUTjAybUlCRTQxWmppOUJSc1ArCmVoeVlBcjVxSSs3U0xWcGhodGZBVjJKRWpsTVBZWGhPSHZWOWZMR056bjh3WmkvU0VtV2JPd05mRTNTRk5rYWUKdlppMzhBRUNnWUVBd2xkQWthWHEwdDJnTFBYL0NMN1puWGxFbzZaNTB1am9ZR3VBUnd3eGIwK3J2K0YvS0M3ZgpGL1hkNGJ5TDA5b2VrdEQ3aXp6dkp4Nm4xbkwwV1NWa2pRdDg3eGtIR0g5RC9FNDM3S25WUDlRK05Sa0ZLcGhLCm1OK0UrNDV3Z1JJMy9zVnBleVRDcGV6Y3RvVFU3NHQwOHRrWXd2TGFkbTFWSDZUNHpBYUxNbk1DZ1lFQTBUNzMKZzhQTUlJYUp1c3E5N1BVUVZGR1k4VXRNZTc5bG5QOEZxa3JHOWE1TXZkSS94ZW5pc1NEL2RpRFVxL21QRCswMwo0RnIrdjVjK1hjbGVyN2ZqSGlQL1hzUFlLUjFJS0xvTlVjQzNXOHV4K25yWitxRHo3cGZHbnBJdTkzVFg3S3FECmV3bUNEQ2Z0VG9Udkt5L05wRlNnOEgvdjN6NEZMbUM3eklXRERTRUNnWUFOU3pDa2hlZjVRcVhKVFk2RGg2S1YKTGcxdThGMVcrdzJpUXRoRWcrWUJ5ajVpWXNkeTlUblhocjhGeVFMN20ra0plL2dvL3lNUTF2eitJMkRwbERBNwpvYlNMR25nc3ljL1p1M1FCNFdBdi9KSEF5aFJiWkkxOXhaUndMTDh2WlJLbGY5V0dVZTVxc1RncjJBeEUwcEpPClptRldQSXlMRzFGK1Y2ZVpOVDFpVndLQmdRQzhSQ0ZEWnVuRTRnZ09EdGl2MlJjbUpueXJyZ3BVMVRMQi9SckYKeTU0VDh3Mk5SUnlvSC9ZZFZRbEU2ZWt3Q3N4VGtpWlNNTTFBNlAzdU9INS9MNzZqb2RQbEdlVGxxVGtCbTlUYwpGNzlpVW5ZQ1hvSzk1QTlXUHkwd0EydEtydENRV2lNT2t0RjF5bjdUeFB2RUtiQ25DSlg5amI3dlo4Z1ZvR2VZCmJ4QW93UUtCZ0N1bDk3RVh5Y1NjRjhwN0VkdTRpWVgyd1IxWXRYVmtjaEMwb0lhc0Z5ZDlGWFVUWVREZnR0akwKRFZBb3VvekVZYk5HdURrNmF2K25neWVXU3gxdkxBSVZ4VVh4K1hHenNjRFdVRzJmVnRrbDd2S3N4aDBGQlNVMgpHS3BmNmpTK3FsdHpXOFhsNEtDTklBdERBWDVWLzdzVUJlN0YwQ29zK082TDdodGhoWDBZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU1iaW5YM21KblJDNlhjaDFQT3R0QnN3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRFeE1qRXlNek01TXpCYQpGdzB5TkRFeE1qQXlNek01TXpCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURqdzNwOW1TOUp4d2JlQzJ3Wmp1Sm0KWFpIb3VpaWVON3pvOVYybDRCd0dYWDJWVUppSU9KVjBralFtVUJDaUNCOVpJMVg0NDhhdldoWmQ1K1NSOGR2SwpGTmVvKzJOQjFiSkY1M3pNNWU1My9oSDFuY2NFMzUrZEU1bkwvaDhUWmVKTURJYXQwZ3BXZjJCQ2I2cThWb3ZICjM2Y1dSRkZLUC9UNTZWQ0RmSnFMMlZhQXFUTERXV3lYRkRSRFZkRllycWNWNWxPdW03TGlRV2s0ZVV4V0VxbEIKZGhNM29qYjBhelJmL3Nya2FWcm9jajRzWlE3MVIxUVYwRW1rQTdyMHVZemVmc2U4Qld1a3MrOXR0WExMSUNnUgpGNGdYREFNVzlicENmMWRIWXY0UmFLSGlsQXUvQ1J5TTlkK0JRVTUwWUNzNVBRbEgrMVJzZUpVbG5leDJKbWVwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZ3VLUE1pZ0tFOEFLajlCTApiSFh4eEhUNjBSUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRFpTb21KR0V3czNuajdNUFpCWVdsb1hXQXlPCldlQ2lGMGwwbm9YbndlTG9ERnVRUWpSc09pNUJRck5LaUtmR0ZGQ1A4d3lDcFZhbG54Z2hnNzQzN2RJTmVmQkwKcUhNYVM0dU5JYnVXUXdPeEZHNE0yQVhMcGk5MlZxc0JEMElCOUFRM0RKdDVyZXRhQTkwOGx4d2ZEaGpxcUxzSgo4VFRVTW5DNmluRHNrU08wcGRxRU42bnRrSTVYUXR4cTh6cnVXMkM5Y2dSbmE2Q25zWmljR20wc2JrZkpIYmJ0CkdFdGpUam04RDdaYUhHMTRJaTVxSTVPU1ZIVEluNjQxRk56TDZQNHRBVGVvMkVMYXd5eG80ZFhmZVNGUTNNMGUKeWllbE1oZjNWUkhUaTNueXVneEIzekxpQXpvU1ZVZ0NTZHBxbGg1bFpoYTJGbURORXBHcjlleFFyT0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQU1GTWtVVkNBOExKeEZiNjNiK0Z1Q3d3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRFeE1qRXlNek01TXpGYQpGdzB5TkRFeE1qQXlNek01TXpGYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEZjNCbzkKMEdRMjJnS0dnWkxiamhCZkhqcHhBUFZ2NFZsK0lCN3pLN2hpZTZXMnpBUS9mN3JxVDRvL0gxWmgyUEpUQ21ISApLMTBzZUtZZXozTUV2UUd4QjlSYUdReStGa2FEd08wVzArVVcwdWd1K1ExSUp5QS8rL1Vhb08vVlpzZkd3dlpiCnBmNGdyUng2THRlTFBZQUljbnVaZWpCOUpyVFFyblUxUE1tSHhsNENGMGlJWTlDaEk5aC9McGE4dWFhYmZOdWkKNmpMNGltdE5EQnJrRDdIdHlVcTJtT0UzTnpPZDYwMWdqeFBQaG56aEkwZ1NvTWMvV2lMUmdXWnB6NTJEUXNjRApqSVQ1eHMxZnJYNnNBbm04WG1kZlhWSUJkRmc3aVpWNmtzNHhKcUg2V3R3ajhrVnF4OHo4TUZ3WmN2WlUyL2NKCjI3YTAyR3dRTWF4ZXdvSG5BZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGSUxpanpJb0NoUEFDby9RUzJ4MThjUjArdEVVTUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGN2lZTDFuTHk1UUJCMGMKdUpTUDN4Zkx2NlBicmkvZm44eVlIZDAvQmRqcTgxRWhTb3pma053T0lGeTJiM1ZGM296c1pXVDVHQXdmWlowaApObUxjSDM4S0VzYzNzVlJ1MkpHRHpTMEVQZ3JPM3pKbWJvd004OUxxRFBZUzNYeUFFTGZOaHVrVEUvMGhOWmg3CitnUHpNOUw2RVdlc0FNVWVuZ2xMQmFYaS8rQXgrYnBNVXdEMER1c3k2MGVzNFVBVkVlWGg3SDJDNjNTZ2hCU1cKS1FBS3hLdHA2b0U3b2RpWXgwUTFnNG9NQ1lvaGJiTlpDelJtN0F4OUpPWGk5UEFITS85MWpyWCs2V0lvUlNGKwplV205UWRwZXlzOHJTUnRTdXFJSDRkSG9KMGlTaGd2Z2hNbURVbS9kU1Jpdm56czhyS1pNT29Qb3VXdmo1VU9MCnBwa3JwSlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMzl3YVBkQmtOdG9DaG9HUzI0NFFYeDQ2Y1FEMWIrRlpmaUFlOHl1NFludWx0c3dFClAzKzY2aytLUHg5V1lkanlVd3BoeHl0ZExIaW1Iczl6QkwwQnNRZlVXaGtNdmhaR2c4RHRGdFBsRnRMb0x2a04KU0NjZ1AvdjFHcUR2MVdiSHhzTDJXNlgrSUswY2VpN1hpejJBQ0hKN21Yb3dmU2EwMEs1MU5UekpoOFplQWhkSQppR1BRb1NQWWZ5Nld2TG1tbTN6Ym91b3krSXByVFF3YTVBK3g3Y2xLdHBqaE56Y3puZXROWUk4VHo0Wjg0U05JCkVxREhQMW9pMFlGbWFjK2RnMExIQTR5RStjYk5YNjErckFKNXZGNW5YMTFTQVhSWU80bVZlcExPTVNhaCtscmMKSS9KRmFzZk0vREJjR1hMMlZOdjNDZHUydE5oc0VER3NYc0tCNXdJREFRQUJBb0lCQVFDQU52QlF0eXF1dis3eQpXd1JoKzl3a25vdWFiWklsb2t3L2tPWXBJTUZhcHJjakczYlRaN1VHdnNmUG40TTZSNmVES0U4WVpCM1plc0NxCnBPYWJzQ1ZuMzdRZ1puaUY1dnc4T2lPUkQ0d0dwb1dWWWMvWm80ODFGbm9yNWtGM1dJYlRzSmFwcDBrR0xpQkIKV3RMWlRVQW5sbXAwWFNlb2hxTEpZeUorZTNKeDhIa3Z0V2ErTStIeFYra3hTL3l2TUNRMUFkTEhJSDJWREdkcgpabUE5VG1iMWdoNzFsL3NJcVh1QThpdll4WUx2R3kyeEpnMTNkMXJtVVpkSmxOYzRzcTIzTi90NkRkeFJpRnVkClRpSitqNDQ4bmhkM0VLZ3NVQmg2WVovRU0wVXNHSnBhZEw5SkhFMUo2S1JVWE9RUzViZGR6ZGthc2FFQ01wengKWFdiTThIRUJBb0dCQU9XRG01cFh0QVBNL285SjJxTSswdmNtaXFFRENCK3N5SUpTcWUwaEp5Z25WVEpmSWk2SgpvYVdUKzg5bS8vRDVqMUpQQWsrUU5kUTVHZEQzRGI3cUVaSEd4QXk3TnZScDdOWWp2a3BJR2x4M29GaVJza2xBCnpnY0ltZmZRcmdxcXVrdFd6bDFDNnpXWWd2VHgxS3IycTBYWUJxMTcwaW8wTGYwTU84emF5MEpGQW9HQkFQbXgKYytPR3RpRFJJZFRTVWF4Z2thZ0FYT1dxcWZSZ2JDb1NFL2ZVZkhwNHNsK0xyNHZUaHg5UmJSei8vUEVuWWlDcQpiL3dFclN1UXdEb1pBVW4va05OY3BhcHlMR0hjcERBb09kaHNTNHZWeWx4YW1TUzFXbzNNbnEvMDF2TlRKcXkzCkZuZm82aG5SZHZGZ2ptQkhLUFRHSUtTNDlVZ09tOUV5dEFSVUF3dzdBb0dCQU5XWnkzbzBQMnYrSDdlNVUwcjAKa0NER2RPUnV6dU96eVpSSVhLODlXSlR0TGtSSDk2YjZIai9jWHRGaW1iWnFmREZ0S01obGZVTjZ0UVVldUdOQwpzb0ZLVEhGUTEwOVhPYno5M1A2QzVrM0NZNitxUVJRZHhPRVU1ejZVcnpWc09SOGV0Y1prSGtWdUlBclkra1QyCmR1WDByQnBQRDRTSnRYYzVLSHA1OGd0RkFvR0JBTW8vYmpzeGRueUdhUHpWanNvdFBrM3lYVXk2UEFkeHdxc2gKRVlPQVhZTm1HRFZFRStFU2FUUjQ1QVRGWk1DQXdmN3JqdUYzZUR6OWRuYVlvbTZwejBra2xodkZkeVdkYm5DRApaTGRrb0p5WGd0M2psSUFqVlVIZUovc21PcVhGQ0dLRnVuRk4rN0VGOVczMlk5eWdSeEJkR3p2UmhQdmt1Vmx0CjFGcGRJa3JaQW9HQU1RanVmUTk0bWdtZitLd3BoVG83Q2NTdUxnZlNFZnRIWm5sY3FPemZJV1UrV2xMdmNsVXIKbTdjY3BVODJxU2JrSm9sQk12UHE2ckRydm1nNytHUkY4NXJiZ0hLZWg0WEJHVXZDWE5sMXlHRi8vL21ieW9PMgp2dG1BTkVmRlJUZEx3N1JlUVVmNFhUQjZNalJaT0dTZXNRQjd5RkNBSVordnM2d1dwcllmYVY4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.11.0-rc2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.11.0-rc2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        volumeMounts:
        - mountPath: /var/run/cilium
          name: hubble-sock-dir
          readOnly: true
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations: null
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.8.2@sha256:a6f80b0517a5266783d619ae14d846d4fbb692f6aaff37804fc8851bf1095a30
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8080
          name: http
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.8.2@sha256:43c1e824751639b1df9460e5c5d5a3fd732f834bb96b3012a4164eeee457cbb6
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        volumeMounts: null
      - args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        command:
        - envoy
        image: docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935
        imagePullPolicy: IfNotPresent
        name: proxy
        ports:
        - containerPort: 8081
          name: http
        volumeMounts:
        - mountPath: /etc/envoy.yaml
          name: hubble-ui-envoy-yaml
          subPath: envoy.yaml
      priorityClassName: null
      securityContext:
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          name: hubble-ui-envoy
        name: hubble-ui-envoy-yaml
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.11.0-rc2
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.11.0-rc2
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.11.0-rc2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
